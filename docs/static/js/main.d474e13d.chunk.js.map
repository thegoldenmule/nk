{"version":3,"sources":["nk-js.js","notes.js","slices/nkSlice.js","slices/workspaceSlice.js","slices/draftSlice.js","slices/loginSlice.js","slices/registerSlice.js","profile.js","slices/filesSlice.js","files.js","editor.js","App.js","index.js"],"names":["arrayBufferToBase64String","buffer","btoa","String","fromCharCode","apply","uintBufferToBase64String","Uint8Array","arrayBufferToString","buf","Uint16Array","stringToArrayBuffer","str","ArrayBuffer","length","bufView","i","strLen","charCodeAt","splitBuffer","view8","view16","subarray","getKeyMaterial","password","crypto","subtle","importKey","TextEncoder","encode","name","deriveKey","keyMaterial","salt","alg","deserializePrivateKey","a","bytes","str2ab","binaryDerString","window","atob","binaryDer","hash","getUnwrappingKey","saltBuffer","deserializeEncryptionKey","wrappedKeyBuffer","unwrappingKey","unwrapKey","serializePrivateKey","key","exportKey","payload","serializeEncryptionKey","getRandomValues","wrappingKey","wrapKey","wrapped","serialize","context","copy","JSON","parse","stringify","keys","signing","privateKey","console","log","encryption","deserialize","data","Error","generateSigningPair","generateKey","modulusLength","publicExponent","pair","generateSymmetricKey","generateIv","exportPublicPEM","publicKey","exportedPublic","match","join","aesParameters","iv","tagLength","contextWithKeys","contextWithKeyNames","keyNames","Set","contextWithUserId","userId","contextWithValue","keyName","value","plaintextValues","contextWithoutKey","keyIndex","indexOf","splice","rest","isLoggedIn","undefined","encrypt","enc","encodedValue","cipher","sign","signature","decrypt","plaintext","TextDecoder","decode","register","signingKeys","encryptionKey","headers","Headers","append","fetch","url","method","body","res","json","proveFetch","options","success","error","saltLength","signatureString","getKeys","createData","cipherValue","form","FormData","Blob","getData","arrayBuffer","cipherBytes","updateData","deleteData","noteFromParametersFactory","title","createdAt","Date","getTime","lastUpdatedAt","valueToNote","noteToValue","note","noteStatus","initialState","noteKeys","noteValues","noteStatuses","saveContext","createAsyncThunk","getState","getContext","serialized","localStorage","setItem","newNote","from","rejectWithValue","replace","c","r","Math","random","toString","newContext","loadNote","updateNote","rejectedWithValue","notes","getNoteValues","existingNote","deleteNote","nkSlice","_","max","floor","echoBuf","b","len","createSlice","reducers","initializeContext","state","Object","fromEntries","entries","map","k","v","n","logout","extraReducers","pending","action","arg","meta","fulfilled","rejected","nodeStatuses","getNk","nk","createSelector","getIsLoggedIn","getNoteKeys","getNoteStatuses","actions","workspaceSlice","activeKey","updateActiveKey","getActiveKey","workspace","draftSlice","drafts","newDraft","currentDraft","isDirty","newDraftUpdatedInternal","updateTitle","updateBody","draftSaved","getDraft","draft","loginPhases","phase","contextData","submitPasswordLogin","dispatch","getLogin","loginSlice","loadAll","sortedKeys","getSortedKeys","first","initLogin","getItem","updatePasswordLogin","login","registrationPhases","valueConfirmation","submitPasswordRegister","getRegister","registerSlice","initRegister","updatePasswordRegister","updatePasswordConfirmationRegister","connect","dispatchLoginInit","dispatchUpdateLoginPassword","dispatchSubmitLoginPassword","dispatchRegisterInit","dispatchUpdateRegisterPassword","dispatchUpdateRegisterPasswordConfirmation","dispatchSubmitRegisterPassword","dispatchLogout","loginPhase","loginValue","loginError","registerPhase","registerValue","registerError","useEffect","passwordRef","useRef","current","focus","isValidRegisterPassword","Modal","centered","backdrop","show","Header","Title","Body","Form","Control","ref","size","type","placeholder","onChange","evt","target","className","Alert","variant","Footer","Button","onClick","disabled","Container","Row","Col","decrypting","md","src","Navbar","bg","expand","Brand","alt","width","style","marginRight","Toggle","aria-controls","Collapse","id","Nav","Text","Spinner","animation","role","filesSlice","query","updateQuery","getQuery","files","dispatchUpdateQuery","activeNote","onCreateNote","onNoteSelected","useState","isCreating","setIsCreating","listItems","ListGroup","Item","as","aria-hidden","status","lastUpdateTime","setTime","content","icon","faExclamationTriangle","faLock","xs","lg","xl","toLocaleDateString","push","active","InputGroup","FormControl","Append","faTimesCircle","isSaving","dispatchUpdateTitle","dispatchUpdateBody","dispatchNewDraftInternal","onSave","onDuplicate","onDelete","showDelete","setShowDelete","getInstance","setMarkdown","onHide","ButtonToolbar","ButtonGroup","faSave","faCopy","toLocaleString","faTrash","initialValue","previewStyle","height","initialEditType","useCommandShortcut","contents","getMarkdown","filteredKeys","sort","j","dispatchNewNote","dispatchLoadNote","dispatchUpdateNote","unwrapResult","updatedNote","dispatchDeleteNote","dispatchUpdateActiveKey","fuseRef","Fuse","includeScore","ignoreLocation","shouldSort","collection","setCollection","results","search","item","source","onSelectNote","store","configureStore","reducer","nkReducer","workspaceReducer","draftReducer","filesReducer","loginReducer","registerReducer","middleware","thunk","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d474e13d.chunk.js","sourcesContent":["const uintBufferToBase64String = buffer => btoa(String.fromCharCode.apply(null, buffer));\nconst arrayBufferToBase64String = buffer => uintBufferToBase64String(new Uint8Array(buffer));\n\nconst arrayBufferToString = buf => {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n};\n\nconst stringToArrayBuffer = str => {\n  const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n};\n\nconst splitBuffer = buffer => {\n  const view8 = new Uint8Array(buffer);\n  const view16 = new Uint16Array(buffer);\n  return [view8.subarray(0, 12), view16.subarray(6)];\n};\n\nconst getKeyMaterial = password => crypto.subtle.importKey(\n  \"raw\",\n  new TextEncoder().encode(password),\n  { name: 'PBKDF2' },\n  false,\n  [\"deriveBits\", \"deriveKey\"]\n);\n\nconst deriveKey = (keyMaterial, salt, alg) => crypto.subtle.deriveKey(\n  {\n    \"name\": \"PBKDF2\",\n    salt,\n    \"iterations\": 100000,\n    \"hash\": \"SHA-256\"\n  },\n  keyMaterial,\n  { \"name\": alg, \"length\": 256},\n  true,\n  [ \"wrapKey\", \"unwrapKey\" ]\n);\n\nconst deserializePrivateKey = async ({ bytes }, password) => {\n  const str2ab = (str) => {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  };\n\n  // todo: decrypt bytes\n\n  const binaryDerString = window.atob(bytes);\n  const binaryDer = str2ab(binaryDerString);\n\n  return crypto.subtle.importKey(\n    \"pkcs8\",\n    binaryDer,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign']);\n};\n\nasync function getUnwrappingKey(password, saltBuffer) {\n  const keyMaterial = await getKeyMaterial(password);\n\n  return window.crypto.subtle.deriveKey(\n    {\n      \"name\": \"PBKDF2\",\n      salt: saltBuffer,\n      \"iterations\": 100000,\n      \"hash\": \"SHA-256\"\n    },\n    keyMaterial,\n    { \"name\": \"AES-KW\", \"length\": 256},\n    true,\n    [ \"wrapKey\", \"unwrapKey\" ]\n  );\n}\n\nconst deserializeEncryptionKey = async ({ salt, bytes }, password) => {\n  const saltBuffer = new Uint8Array(stringToArrayBuffer(salt));\n  const wrappedKeyBuffer = stringToArrayBuffer(bytes);\n\n  const unwrappingKey = await getUnwrappingKey(password, saltBuffer);\n\n  return window.crypto.subtle.unwrapKey(\n    \"raw\",\n    wrappedKeyBuffer,\n    unwrappingKey,\n    \"AES-KW\",\n    \"AES-GCM\",\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n};\n\nconst serializePrivateKey = async (key, password) => {\n  // TODO: encrypt\n  const exportKey = await crypto.subtle.exportKey(\"pkcs8\", key);\n\n  const payload = {\n    bytes: arrayBufferToBase64String(exportKey),\n  };\n\n  return payload;\n}\n\nconst serializeEncryptionKey = async (key, password) => {\n  const keyMaterial = await getKeyMaterial(password);\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n  const wrappingKey = await deriveKey(keyMaterial, salt, 'AES-KW');\n\n  const wrapped = await crypto.subtle.wrapKey(\n    'raw',\n    key,\n    wrappingKey,\n    'AES-KW',\n  );\n\n  return {\n    salt: arrayBufferToString(salt.buffer),\n    bytes: arrayBufferToString(wrapped),\n  };\n};\n\nconst serialize = async (context, password) => {\n  const copy = JSON.parse(JSON.stringify(context));\n\n  copy.keys.signing = {};\n  try {\n    copy.keys.signing.privateKey = await serializePrivateKey(context.keys.signing.privateKey, password);\n  } catch (error) {\n    console.log('Could not serialize private key.', error);\n  }\n\n  try {\n    copy.keys.encryption = await serializeEncryptionKey(context.keys.encryption, password);\n  } catch (error) {\n    console.log('Could not serialize encryption key.', error)\n  }\n\n  return JSON.stringify(copy);\n};\n\nconst deserialize = async (data, password) => {\n  const context = JSON.parse(data);\n\n  const { signing: { privateKey }, encryption } = context.keys;\n  context.keys = {\n    signing: {},\n  };\n\n  try {\n    context.keys.signing.privateKey = await deserializePrivateKey(privateKey, password);\n  } catch (error) {\n    throw new Error('Could not create private key.');\n  }\n\n  try {\n    context.keys.encryption = await deserializeEncryptionKey(encryption, password);\n  } catch (error) {\n    throw new Error('Could not create symmetric encryption key.');\n  }\n\n  return context;\n};\n\nconst generateSigningPair = async () => {\n  const pair = await crypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign', 'verify'],\n  );\n\n  return pair;\n};\n\nconst generateSymmetricKey = async () => await crypto.subtle.generateKey(\n  {\n    name: 'AES-GCM',\n    length: 256,\n  },\n  true,\n  ['encrypt', 'decrypt']);\n\nconst generateIv = () => window.crypto.getRandomValues(new Uint8Array(12));\n\nconst exportPublicPEM = async (publicKey) => {\n  let exportedPublic;\n  try {\n    exportedPublic = await crypto.subtle.exportKey('spki', publicKey);\n  } catch (error) {\n    throw new Error(`Could not export public key: ${error}.`);\n  }\n\n  const key = arrayBufferToBase64String(exportedPublic)\n    .match(/.{1,64}/g)\n    .join('\\n');\n\n  return `-----BEGIN PUBLIC KEY-----\\n${key}\\n-----END PUBLIC KEY-----`;\n};\n\nconst aesParameters = iv => ({\n  name: 'AES-GCM',\n  tagLength: 128,\n  iv,\n});\n\nconst createContext = () => ({\n  url: 'https://nk-server.thegoldenmule.com',\n  userId: undefined,\n  keys: {\n    signing: undefined,\n    encryption: undefined,\n  },\n  keyNames: [],\n  plaintextValues: {},\n});\n\nconst contextWithConfig = (context, { url }) => ({\n  ...context,\n  url\n});\n\nconst contextWithKeys = (context, signing, encryption) => ({\n  ...context,\n  keys: {\n    signing,\n    encryption,\n  },\n});\n\nconst contextWithKeyNames = (context, keyNames) => ({\n  ...context,\n  keyNames: [...new Set(keyNames)],\n});\n\nconst contextWithUserId = (context, userId) => ({\n  ...context,\n  userId,\n});\n\nconst contextWithValue = (context, keyName, value) => contextWithKeyNames({\n  ...context,\n  plaintextValues: {\n    ...context.plaintextValues,\n    [keyName]: value\n  },\n}, [...context.keyNames, keyName]);\n\nconst contextWithoutKey = (context, keyName) => {\n  const keyNames = [...context.keyNames];\n  const keyIndex = keyNames.indexOf(keyName);\n  if (-1 !== keyIndex) {\n    keyNames.splice(keyIndex, 1);\n  }\n\n  const { plaintextValues: { [keyName]: _, ...rest } } = context;\n\n  return {\n    ...context,\n    keyNames,\n    plaintextValues: rest,\n  };\n};\n\nconst isLoggedIn = context => context.userId !== undefined;\n\nconst encrypt = async (context, iv, value) => {\n  // create Uint8Array from value\n  const enc = new TextEncoder();\n  const encodedValue = enc.encode(value);\n\n  // encrypt with hard symmetric encryption\n  let cipher;\n  try {\n    cipher = await crypto.subtle.encrypt(\n      aesParameters(iv),\n      context.keys.encryption,\n      encodedValue\n    );\n  } catch (error) {\n    throw new Error(`Could not encrypt value: ${error}.`);\n  }\n\n  // sign ciphertext with signing key\n  let signature;\n  try {\n    signature = await window.crypto.subtle.sign(\n      {\n        name: 'RSASSA-PKCS1-v1_5',\n      },\n      context.keys.signing.privateKey,\n      new Uint8Array(cipher),\n    );\n  } catch (error) {\n    throw new Error(`Could not sign value: ${error}.`);\n  }\n\n  return {\n    value: cipher,\n    signature: signature,\n  }\n};\n\nconst decrypt = async (context, iv, value) => {\n  let plaintext;\n  try {\n    plaintext = await crypto.subtle.decrypt(\n      aesParameters(iv),\n      context.keys.encryption,\n      value,\n    );\n  } catch (error) {\n    throw new Error(`Could not decrypt value: ${error}.`);\n  }\n\n  return new TextDecoder().decode(plaintext);\n};\n\nconst register = async (context) => {\n  // generate signing pair\n  let signingKeys;\n  try {\n    signingKeys = await generateSigningPair();\n  } catch (error) {\n    throw new Error(`Could not generate signing key pair: ${error}.`);\n  }\n\n  // generate symmetric key\n  let encryptionKey;\n  try {\n    encryptionKey = await generateSymmetricKey();\n  } catch (error) {\n    throw new Error(`Could not generate encryption key: ${error}.`);\n  }\n\n  // export\n  const key = await exportPublicPEM(signingKeys.publicKey);\n\n  // create user\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"text/plain\");\n\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/user`,\n      {\n        method: 'post',\n        body: key,\n        headers,\n      });\n    json = await res.json();\n  } catch (e) {\n    throw e;\n  }\n\n  return contextWithKeys(\n    contextWithUserId(context, json.userId),\n    signingKeys,\n    encryptionKey,\n  );\n};\n\nconst proveFetch = async (context, url, options) => {\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/proof/${context.userId}`,\n      {\n        method: 'post',\n      }\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  const { success, error, value } = json;\n  if (!success) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  // sign\n  const signature = await crypto.subtle.sign(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      saltLength: 32\n    },\n    context.keys.signing.privateKey,\n    new TextEncoder().encode(value));\n  const signatureString = arrayBufferToBase64String(signature);\n\n  // create headers object\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // append proof + signature\n  options.headers['X-Nk-Proof'] = value;\n  options.headers['X-Nk-Proof-Sig'] = signatureString;\n\n  return await fetch(url, options);\n};\n\nconst getKeys = async (context) => {\n  let json;\n  try {\n    const res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}`\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  const { success, error, keys } = json;\n  if (!success) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  return contextWithKeyNames(context, keys);\n};\n\nconst createData = async (context, keyName, value) => {\n  if (value.length % 2 === 1) {\n    value += ' ';\n  }\n\n  const iv = generateIv();\n  const { value: cipherValue, signature } = await encrypt(context, iv, value);\n\n  // prepare binary data\n  const form = new FormData();\n  form.append('Key', keyName);\n  form.append('Iv', new Blob([iv]));\n  form.append('Sig', new Blob([signature]));\n  form.append('Payload', new Blob([cipherValue]));\n\n  // send binary data\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}`,\n      {\n        method: 'post',\n        body: form,\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not create data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not create data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nconst getData = async (context, keyName) => {\n  // fetch\n  let res;\n  try {\n    res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}/${keyName}`\n    );\n  } catch (error) {\n    throw new Error(`Could not prove fetch: ${error}.`);\n  }\n\n  // read response\n  let buffer;\n  try {\n    buffer = await res.arrayBuffer();\n  } catch (error) {\n    throw new Error(`Could not read response: ${error}.`);\n  }\n\n  // split off iv\n  const [iv, cipherBytes] = splitBuffer(buffer);\n\n  // decrypt response\n  let plaintext;\n  try {\n    plaintext = await decrypt(context, iv, cipherBytes);\n  } catch (error) {\n    throw new Error(`Could not decrypt data: ${error}.`);\n  }\n\n  return contextWithValue(context, keyName, plaintext);\n};\n\nconst updateData = async (context, keyName, value) => {\n  if (value.length % 2 === 1) {\n    value += ' ';\n  }\n\n  const iv = generateIv();\n  const { value: cipherValue, signature } = await encrypt(context, iv, value);\n\n  const form = new FormData();\n  form.append('Iv', new Blob([iv]));\n  form.append('Sig', new Blob([signature]));\n  form.append('Payload', new Blob([cipherValue]));\n\n  // send\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}/${keyName}`,\n      {\n        method: 'put',\n        body: form\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not update data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not update data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nconst deleteData = async (context, keyName) => {\n  let json;\n  try {\n    const res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}/${keyName}`,\n      {\n        method: 'delete'\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not delete data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not delete data: server returned false.');\n  }\n\n  return contextWithoutKey(context, keyName);\n};\n\nconst utils = { arrayBufferToString, stringToArrayBuffer };\nexport { utils, createContext, contextWithConfig, isLoggedIn, register, createData, updateData, getData, deleteData, getKeys, serialize, deserialize };\n","const noteFromParametersFactory = ({ title, body }) => ({\n  title,\n  body,\n  createdAt: new Date().getTime(),\n  lastUpdatedAt: new Date().getTime(),\n});\nconst noteFactory = () => noteFromParametersFactory({\n  title: 'New Note',\n  body: '',\n});\n\nconst valueToNote = value => value ? JSON.parse(value) : undefined;\nconst noteToValue = note => note ? JSON.stringify(note) : undefined;\n\nexport { noteFromParametersFactory, noteFactory, valueToNote, noteToValue };\n","import {\n  createContext,\n  createData, deleteData,\n  deserialize,\n  getData,\n  getKeys,\n  isLoggedIn,\n  register,\n  serialize,\n  updateData\n} from '../nk-js';\nimport { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit';\nimport { noteFactory, noteToValue, valueToNote } from '../notes';\n\nexport const noteStatus = {\n  unloaded: 'unloaded',\n  loading: 'loading',\n  loaded: 'loaded',\n  saving: 'saving',\n  deleting: 'deleting',\n  error: 'error',\n};\n\nconst initialState = {\n  isLoggedIn: false,\n  context: createContext(),\n  noteKeys: [],\n  noteValues: {},\n  noteStatuses: {},\n};\n\n// taken from https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nconst newKey = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n  const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n  return v.toString(16);\n});\n\nexport const saveContext = createAsyncThunk(\n  'nk/saveContext',\n  async (password, { getState }) => {\n    const context = getContext(getState());\n    const serialized = await serialize(context, password);\n\n    // save!\n    localStorage.setItem('_context', serialized);\n  },\n);\n\nexport const newNote = createAsyncThunk(\n  'nk/new-note',\n  async ({ from }, { getState, rejectWithValue }) => {\n    const context = getContext(getState());\n    const key = newKey();\n    const note = from || noteFactory();\n\n    let newContext;\n    try {\n      newContext = await createData(context, key, noteToValue(note));\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n\n    return { key, note, context: newContext };\n  },\n);\n\nexport const loadNote = createAsyncThunk(\n  'nk/load-note',\n  async (key, { getState, rejectWithValue }) => {\n    const context = getContext(getState());\n    let newContext;\n    try {\n      newContext = await getData(context, key);\n    } catch (error) {\n      return rejectWithValue({ key, error });\n    }\n\n    const note = valueToNote(newContext.plaintextValues[key])\n\n    return { key, note, context: newContext };\n  }\n);\n\nexport const updateNote = createAsyncThunk(\n  'nk/update-note',\n  async ({ key, note }, { getState, rejectedWithValue }) => {\n    // get note out of local\n    const notes = getNoteValues(getState());\n    const existingNote = notes[key];\n\n    // update\n    note.createdAt = existingNote.createdAt || new Date().getTime();\n    note.lastUpdatedAt = new Date().getTime();\n\n    const value = noteToValue(note);\n    const context = getContext(getState());\n    let newContext;\n    try {\n      newContext = await updateData(context, key, value);\n    } catch (error) {\n      return rejectedWithValue({ key, error });\n    }\n\n    return { key, note, context: newContext };\n  },\n);\n\nexport const deleteNote = createAsyncThunk(\n  'nk/delete-note',\n  async (key, { getState, rejectedWithValue }) => {\n    let newContext;\n    try {\n      newContext = await deleteData(getContext(getState()), key);\n    } catch (error) {\n      return rejectedWithValue({ key, error });\n    }\n\n    return { key, context: newContext };\n  },\n);\n\nexport const echo = createAsyncThunk(\n  'nk/echo',\n  async (_, { getState, rejectedWithValue }) => {\n    const length = Math.max(6, Math.floor(Math.random() * 1000));\n    const buf = new Uint8Array(length);\n    await crypto.getRandomValues(buf);\n\n    const form = new FormData();\n    form.append('Payload', new Blob([buf]));\n\n    let echoBuf;\n    try {\n      const res = await fetch(\n        `${getContext(getState()).url}/utilities/echo`,\n        {\n          method: 'post',\n          body: form,\n        });\n      echoBuf = await res.arrayBuffer();\n    } catch (error) {\n      return rejectedWithValue(error);\n    }\n\n    const a = new Uint8Array(buf);\n    const b = new Uint8Array(echoBuf);\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (a[i] != b[i]) {\n        console.log('FAILED', length, a, b);\n        return rejectedWithValue(`Values don't match.`);\n      }\n    }\n\n    console.log('SUCCEEDED');\n  }\n);\n\nconst parseContextNodes = (plaintextValues) => Object.fromEntries(\n  Object.entries(plaintextValues).map(\n    ([k, v]) => [k, valueToNote(v)]));\n\nconst nkSlice = createSlice({\n  name: 'nk',\n  initialState,\n  reducers: {\n    initializeContext(state, { payload: context }) {\n      return {\n        ...state,\n        context,\n        isLoggedIn: isLoggedIn(context),\n        noteKeys: context.keyNames,\n        notes: parseContextNodes(context.plaintextValues),\n        noteStatuses: Object.fromEntries(context.keyNames.map(n => [n, context.plaintextValues[n] ? noteStatus.loaded : noteStatus.unloaded])),\n      };\n    },\n    logout(state) {\n      return {\n        ...state,\n        isLoggedIn: false,\n        context: createContext(),\n      };\n    },\n  },\n  extraReducers: {\n    [newNote.pending]: (state, action) => {\n      const { meta: { arg } } = action;\n\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [arg]: noteStatus.loading,\n        },\n      };\n    },\n    [newNote.fulfilled]: (state, { payload: { key, note, context } }) => ({\n      ...state,\n      noteKeys: context.keyNames,\n      noteValues: {\n        ...state.noteValues,\n        [key]: note,\n      },\n      noteStatus: {\n        ...state.noteStatuses,\n        [key]: noteStatus.loaded,\n      },\n      context\n    }),\n    [newNote.rejected]: (state, action) => ({\n      ...state,\n      // TODO: add error\n    }),\n    [loadNote.pending]: (state, action) => {\n      const { meta: { arg } } = action;\n      return {\n        ...state,\n        nodeStatuses: {\n          ...state.noteStatuses,\n          [arg]: noteStatus.loading,\n        },\n      };\n    },\n    [loadNote.fulfilled]: (state, { payload: { key, context, note } }) => ({\n      ...state,\n      context,\n      noteValues: {\n        ...state.noteValues,\n        [key]: note,\n      },\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.loaded\n      },\n    }),\n    [loadNote.rejected]: (state, { payload: { key, error } }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.error\n      },\n    }),\n    [updateNote.pending]: (state, { meta: { arg: { key } } }) => {\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.saving,\n        },\n      };\n    },\n    [updateNote.fulfilled]: (state, { payload: { key, note, context } }) => {\n      return {\n        ...state,\n        context,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.loaded,\n        },\n        noteValues: {\n          ...state.noteValues,\n          [key]: note,\n        }\n      };\n    },\n    [updateNote.rejected]: (state, { key, error }) => {\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.error,\n        },\n      };\n    },\n    [deleteNote.pending]: (state, { meta: { arg: key } }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.deleting,\n      },\n    }),\n    [deleteNote.fulfilled]: (state, { payload: { key, context } }) => {\n      const {\n        noteStatuses: { [key]: s, ...noteStatuses },\n        noteValues: { [key]: v, ...noteValues },\n      } = state;\n\n      const { keyNames: noteKeys } = context;\n\n      return {\n        ...state,\n        context,\n        noteKeys,\n        noteStatuses,\n        noteValues,\n      };\n    },\n    [deleteNote.rejected]: (state, { key }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.error,\n      },\n    }),\n  },\n});\n\nexport const getNk = ({ nk }) => nk;\nexport const getContext = createSelector(getNk, ({ context }) => context);\nexport const getIsLoggedIn = createSelector(getNk, ({ isLoggedIn }) => isLoggedIn);\nexport const getNoteKeys = createSelector(getNk, ({ noteKeys }) => noteKeys);\nexport const getNoteValues = createSelector(getNk, ({ noteValues }) => noteValues);\nexport const getNoteStatuses = createSelector(getNk, ({ noteStatuses }) => noteStatuses);\n\nexport const { initializeContext, logout, } = nkSlice.actions;\nexport default nkSlice.reducer;\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\n\nconst workspaceSlice = createSlice({\n  name: 'workspace',\n  initialState: {\n    activeKey: '',\n  },\n  reducers: {\n    updateActiveKey(state, action) {\n      return {\n        ...state,\n        activeKey: action.payload,\n      };\n    },\n  },\n});\n\nexport const getWorkspace = ({ workspace }) => workspace;\nexport const getActiveKey = createSelector(getWorkspace, ({ activeKey }) => activeKey);\n\nexport const { updateActiveKey } = workspaceSlice.actions;\nexport default workspaceSlice.reducer;\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\nimport { getNoteValues } from './nkSlice';\n\nconst initialState = {\n  drafts: {},\n  newDraft: false,\n};\n\nconst draftSlice =  createSlice(\n  {\n    name: 'draft',\n    initialState,\n    reducers: {\n      newDraft(state, { payload: { key, note } }) {\n        const currentDraft = state.drafts[key];\n        return {\n          ...state,\n          key,\n          drafts: {\n            ...state.drafts,\n            [key]: currentDraft || { ...note, isDirty: false }\n          },\n          newDraft: true,\n        };\n      },\n\n      newDraftUpdatedInternal(state) {\n        return {\n          ...state,\n          newDraft: false,\n        };\n      },\n\n      updateTitle(state, { payload: title }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [state.key]: {\n              ...state.drafts[state.key],\n              title,\n              isDirty: true,\n            },\n          },\n        };\n      },\n\n      updateBody(state, { payload: body }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [state.key]: {\n              ...state.drafts[state.key],\n              body,\n              isDirty: true,\n            },\n          },\n        };\n      },\n\n      draftSaved(state, { payload: { key, note } }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [key]: {\n              ...state.drafts[key],\n              lastUpdatedAt: note.lastUpdatedAt,\n              isDirty: false,\n            },\n          },\n        };\n      },\n    },\n  },\n);\n\nexport const getDraft = ({ draft }) => draft;\nexport const getDraftKey = createSelector(getDraft, ({ key }) => key);\n\nexport const { newDraft, newDraftUpdatedInternal, updateTitle, updateBody, draftSaved } = draftSlice.actions;\nexport default draftSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createContext, deserialize, getKeys } from '../nk-js';\nimport { getContext, getNoteValues, initializeContext, loadNote } from './nkSlice';\nimport { updateActiveKey } from './workspaceSlice';\nimport { newDraft } from './draftSlice';\nimport { getSortedKeys } from '../App';\n\nexport const loginPhases = {\n  uninitialized: 'uninitialized',\n  requestingCredentials: 'requestingCredentials',\n  decrypting: 'decrypting',\n  completeLoggedIn: 'completeLoggedIn',\n  completeAnonymous: 'completeAnon',\n};\n\nconst initialState = {\n  phase: loginPhases.uninitialized,\n  value: '',\n  error: '',\n  contextData: '',\n  context: null,\n};\n\nexport const submitPasswordLogin = createAsyncThunk(\n  'login/submit',\n  async (_, { getState, dispatch, rejectWithValue, }) => {\n    const { value, contextData } = getLogin(getState());\n\n    const { decrypt } = loginSlice.actions;\n    dispatch(decrypt());\n\n    let context;\n    try {\n      context = await deserialize(contextData, value);\n    } catch (error) {\n      return rejectWithValue('Invalid password.');\n    }\n\n    try {\n      context = await getKeys(context);\n    } catch (error) {\n      return;\n    }\n\n    dispatch(initializeContext(context));\n    await dispatch(loadAll());\n\n    return;\n  });\n\nexport const loadAll = createAsyncThunk(\n  'login/loadAll',\n  async (action, { getState, dispatch }) => {\n    const { keyNames } = getContext(getState());\n    for (const key of keyNames) {\n      await dispatch(loadNote(key));\n    }\n\n    const notes = getNoteValues(getState());\n    const sortedKeys = getSortedKeys(keyNames, notes);\n    const [first, ..._] = sortedKeys;\n    if (first) {\n      dispatch(updateActiveKey(first));\n      dispatch(newDraft({ key: first, note: notes[first] }));\n    }\n  },\n);\n\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    initLogin: (state, action) => {\n      const contextData = localStorage.getItem('_context');\n      if (!contextData) {\n        return {\n          ...state,\n          phase: loginPhases.completeAnonymous,\n          context: createContext(),\n          error: '',\n        };\n      }\n\n      return {\n        ...state,\n        phase: loginPhases.requestingCredentials,\n        contextData,\n        value: '',\n        error: '',\n      };\n    },\n    decrypt: (state) => ({\n      ...state,\n      phase: loginPhases.decrypting,\n    }),\n    updatePasswordLogin: (state, { payload }) => ({ ...state, value: payload, }),\n  },\n\n  extraReducers: {\n    [submitPasswordLogin.rejected]: (state, { payload: error }) => ({\n      ...state,\n      phase: loginPhases.requestingCredentials,\n      error,\n    }),\n    [submitPasswordLogin.fulfilled]: () => ({\n      phase: loginPhases.completeLoggedIn,\n    }),\n  },\n});\n\nexport const getLogin = ({ login }) => login;\nexport const getPassword = ({ value }) => value;\n\nexport const { initLogin, updatePasswordLogin } = loginSlice.actions;\nexport default loginSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createContext, register } from '../nk-js';\nimport { initializeContext, saveContext } from './nkSlice';\n\nexport const registrationPhases = {\n  uninitialized: 'uninitialized',\n  requestingCredentials: 'requestingCredentials',\n  registering: 'registering',\n  completeRegistration: 'completeRegistration',\n};\n\nconst initialState = {\n  phase: registrationPhases.uninitialized,\n  value: '',\n  valueConfirmation: '',\n  error: '',\n};\n\nexport const submitPasswordRegister = createAsyncThunk(\n  'register/submit',\n  async (action, { getState, dispatch, rejectedWithValue }) => {\n    let context;\n    try {\n      context = await register(createContext())\n    } catch (error) {\n      return rejectedWithValue(error);\n    }\n\n    dispatch(initializeContext(context));\n\n    const { value } = getRegister(getState());\n    await dispatch(saveContext(value))\n\n    return { context };\n  },\n);\n\nconst registerSlice = createSlice(\n  {\n    name: 'register',\n    initialState,\n    reducers: {\n      initRegister: (state, action) => ({\n        ...state,\n        phase: registrationPhases.requestingCredentials,\n      }),\n      updatePasswordRegister: (state, { payload: value }) => ({\n        ...state,\n        value,\n      }),\n      updatePasswordConfirmationRegister: (state, { payload: valueConfirmation }) => ({\n        ...state,\n        valueConfirmation,\n      }),\n    },\n    extraReducers: {\n      [submitPasswordRegister.pending]: (state) => ({\n        ...state,\n        phase: registrationPhases.registering,\n      }),\n      [submitPasswordRegister.rejected]: (state, error) => ({\n        phase: registrationPhases.requestingCredentials,\n        error,\n      }),\n      [submitPasswordRegister.fulfilled]: () => ({\n        phase: registrationPhases.completeRegistration,\n      }),\n    },\n  },\n);\n\nexport const getRegister = ({ register }) => register;\n\nexport const { initRegister, updatePasswordRegister, updatePasswordConfirmationRegister } = registerSlice.actions;\nexport default registerSlice.reducer;\n","import { Alert, Button, Col, Container, Form, Modal, Nav, Navbar, Row, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getContext, getIsLoggedIn, } from './slices/nkSlice';\nimport {\n  getLogin, initLogin,\n  loginPhases,\n  submitPasswordLogin,\n  updatePasswordLogin\n} from './slices/loginSlice';\nimport { useEffect, useRef } from 'react';\nimport {\n  getRegister,\n  initRegister,\n  registrationPhases,\n  submitPasswordRegister, updatePasswordConfirmationRegister,\n  updatePasswordRegister\n} from './slices/registerSlice';\n\nconst ProfileView = ({\n  isLoggedIn, login, register,\n  dispatchLoginInit, dispatchUpdateLoginPassword, dispatchSubmitLoginPassword,\n  dispatchRegisterInit, dispatchUpdateRegisterPassword, dispatchUpdateRegisterPasswordConfirmation, dispatchSubmitRegisterPassword,\n  dispatchLogout, }) => {\n\n  const { phase: loginPhase, value: loginValue, error: loginError, } = login;\n  const { phase: registerPhase, value: registerValue, valueConfirmation, error: registerError, } = register;\n\n  const renderPhase = () => {\n    if (isLoggedIn) {\n      return (\n        <Nav>\n          <Navbar.Text>Signed in.&nbsp;&nbsp;</Navbar.Text>\n          <Button\n            variant={'outline-secondary'}\n            onClick={() => dispatchLogout()}\n          >Logout</Button>\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.decrypting || registerPhase === registrationPhases.registering) {\n      return (\n        <Nav>\n          <Spinner animation={'border'} size={'sm'} role={'status'} />\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.completeAnonymous || loginPhase === loginPhases.uninitialized) {\n      return (\n        <Nav>\n          <Button\n            className={'mr-sm-2'}\n            onClick={() => dispatchRegisterInit()}\n          >\n            Register\n          </Button>\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.requestingCredentials || registerPhase === registrationPhases.requestingCredentials) {\n      return (\n        <></>\n      );\n    }\n  };\n\n  useEffect(() => dispatchLoginInit(), []);\n  const passwordRef = useRef(null);\n  useEffect(() => passwordRef.current && passwordRef.current.focus());\n\n  const isValidRegisterPassword = registerValue\n    && valueConfirmation\n    && registerValue === valueConfirmation\n    && registerValue.length >= 8;\n\n  return (\n    <div>\n      <Modal centered backdrop={'static'} show={loginPhase === loginPhases.requestingCredentials}>\n        <Modal.Header>\n          <Modal.Title>Please enter your password.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            ref={passwordRef}\n            size={'sm'}\n            type={'password'}\n            placeholder={'Password'}\n            value={loginValue}\n            onChange={evt => dispatchUpdateLoginPassword(evt.target.value)}\n          />\n          {\n            loginError && <div className={'pt-4'}><Alert variant={'danger'}>{loginError}</Alert></div>\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant={'primary'} onClick={() => dispatchSubmitLoginPassword()}>Login</Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered backdrop={'static'} show={registerPhase === registrationPhases.requestingCredentials}>\n        <Modal.Header>\n          <Modal.Title>Please enter a secure password.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            size={'sm'}\n            type={'password'}\n            placeholder={'Password'}\n            value={registerValue}\n            onChange={evt => dispatchUpdateRegisterPassword(evt.target.value)}\n          />\n          <div className={'p-2'} />\n          <Form.Control\n            size={'sm'}\n            type={'password'}\n            placeholder={'Re-enter Password'}\n            value={valueConfirmation}\n            onChange={evt => dispatchUpdateRegisterPasswordConfirmation(evt.target.value)}\n          />\n          {\n            registerError && <div className={'pt-4'}><Alert variant={'danger'}>{registerError}</Alert></div>\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button disabled={!isValidRegisterPassword} variant={'primary'} onClick={() => dispatchSubmitRegisterPassword()}>Register</Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered backdrop={'static'} show={loginPhase === loginPhases.decrypting || registerPhase === registrationPhases.registering}>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col>\n                {\n                  loginPhase === loginPhase.decrypting\n                    ? (<p className={'text-center lead'}>Decrypting...</p>)\n                    : (<p className={'text-center lead'}>Generating Keys...</p>)\n                }\n              </Col>\n            </Row>\n            <Row>\n              <Col></Col>\n              <Col md={'auto'}>\n                <img src={'./infinity.gif'} />\n              </Col>\n              <Col></Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n      <Navbar bg={'light'} expand={'lg'}>\n        <Navbar.Brand>\n          <img\n            alt={'Logo'}\n            width={'44'}\n            style={{ marginRight: '20px '}}\n            src={'logo.png'}\n          />\n          Nk Notes\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'} className={'justify-content-end'}>\n          { renderPhase() }\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n};\n\nexport default connect(\n  state => ({\n    login: getLogin(state),\n    register: getRegister(state),\n    context: getContext(state),\n    isLoggedIn: getIsLoggedIn(state),\n  }),\n  dispatch => ({\n    dispatchLoginInit: () => dispatch(initLogin()),\n    dispatchUpdateLoginPassword: value => dispatch(updatePasswordLogin(value)),\n    dispatchSubmitLoginPassword: () => dispatch(submitPasswordLogin()),\n    dispatchRegisterInit: () => dispatch(initRegister()),\n    dispatchUpdateRegisterPassword: value => dispatch(updatePasswordRegister(value)),\n    dispatchUpdateRegisterPasswordConfirmation: value => dispatch(updatePasswordConfirmationRegister(value)),\n    dispatchSubmitRegisterPassword: () => dispatch(submitPasswordRegister()),\n  }))(ProfileView);\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\n\nconst filesSlice = createSlice({\n  name: 'files',\n  initialState: {\n    query: '',\n  },\n  reducers: {\n    updateQuery(state, { payload: query }) {\n      return {\n        ...state,\n        query,\n      };\n    },\n  },\n});\n\nexport const getFiles = ({ files }) => files;\nexport const getQuery = createSelector(getFiles, ({ query }) => query);\n\nexport const { updateQuery } = filesSlice.actions;\nexport default filesSlice.reducer;\n","import { Button, Col, Container, FormControl, InputGroup, ListGroup, Row, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle, faLock, faSearch, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { noteStatus } from './slices/nkSlice';\nimport { connect } from 'react-redux';\nimport { getQuery, updateQuery } from './slices/filesSlice';\n\nconst FileBrowser = ({  files = [], activeNote, query, dispatchUpdateQuery, onCreateNote, onNoteSelected, }) => {\n  // state\n  const [isCreating, setIsCreating] = useState(false);\n\n  // generate list items\n  const listItems = [(\n    <ListGroup.Item key={'__new__'}>\n      <Button\n        variant={'outline-success'}\n        onClick={async () => {\n          setIsCreating(true);\n          await onCreateNote();\n          setIsCreating(false);\n        }}\n      >\n        {\n          isCreating\n            ? <Spinner\n                as={'span'}\n                animation={'border'}\n                size={'sm'}\n                role={'status'}\n                aria-hidden={'true'}\n              />\n            : <span>+ New Note</span>\n        }\n      </Button>\n    </ListGroup.Item>\n  )];\n\n  for (let i = 0, len = files.length; i < len; i++) {\n    const { key, name, lastUpdatedAt, status } = files[i];\n    const lastUpdateTime = new Date();\n    lastUpdateTime.setTime(lastUpdatedAt);\n\n    let content;\n    switch (status) {\n      case noteStatus.error: {\n        content = <FontAwesomeIcon icon={faExclamationTriangle}/>;\n        break;\n      }\n      case noteStatus.loading: {\n        content = <Spinner animation={'border'} size={'sm'} as={'span'}/>;\n        break;\n      }\n      case noteStatus.unloaded: {\n        content = <FontAwesomeIcon icon={faLock}/>;\n        break;\n      }\n      default: {\n        content = (\n          <Container>\n            <Row xs={1} md={1} lg={2} xl={2}>\n              <Col>\n                <span>{name}</span>\n              </Col>\n              <Col>\n                <span><small>{lastUpdateTime.toLocaleDateString()}</small></span>\n              </Col>\n            </Row>\n          </Container>\n        );\n\n        break;\n      }\n    }\n\n    listItems.push(\n      <ListGroup.Item\n        action\n        key={i}\n        active={activeNote === key}\n        onClick={() => onNoteSelected(key)}\n      >\n        { content }\n      </ListGroup.Item>\n    );\n  }\n\n  return (\n    <div>\n      <div className={'pb-4'}>\n        <InputGroup>\n          <FormControl type={'text'} placeholder={'Search'} size={'lg'} value={query} onChange={evt => dispatchUpdateQuery(evt.target.value)} />\n          <InputGroup.Append>\n            <Button variant={'outline-secondary'} onClick={() => dispatchUpdateQuery('')}>\n              <FontAwesomeIcon icon={faTimesCircle} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n\n      <ListGroup>\n        {listItems}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    query: getQuery(state),\n  }),\n  dispatch => ({\n    dispatchUpdateQuery: query => dispatch(updateQuery(query)),\n  }),\n)(FileBrowser);\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, ButtonGroup, ButtonToolbar, Form, Modal, OverlayTrigger, Spinner, Tooltip } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faHistory, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Editor } from '@toast-ui/react-editor';\nimport { connect } from 'react-redux';\nimport {\n  getDraft,\n  getDraftKey,\n  newDraftUpdatedInternal,\n  updateBody,\n  updateTitle\n} from './slices/draftSlice';\nimport { getNoteStatuses, noteStatus } from './slices/nkSlice';\nimport { getActiveKey } from './slices/workspaceSlice';\n\nconst NoteEditor = ({\n  onSave, onDuplicate, onDelete, isSaving,\n  draft: { key, drafts, newDraft },\n  dispatchNewDraftInternal, dispatchUpdateTitle, dispatchUpdateBody }) => {\n\n  const { title, body, lastUpdatedAt, } = drafts[key] || {};\n\n  const ref = useRef(null);\n  const [showDelete, setShowDelete] = useState(false);\n\n  useEffect(() => {\n    if (newDraft) {\n      if (ref.current) {\n        ref.current.getInstance().setMarkdown(body);\n      }\n\n      dispatchNewDraftInternal();\n    }\n  });\n\n  if (!key) {\n    return null;\n  }\n\n  const lastUpdateTime = new Date();\n  lastUpdateTime.setTime(lastUpdatedAt);\n\n  return (\n    <div>\n      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\n        <Modal.Header>Confirm</Modal.Header>\n        <Modal.Body>\n          <p>{`Are you sure you want to permanently delete '${title}'? There will be no way to recover this note.`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant={'secondary'} onClick={() => setShowDelete(false)}>Close</Button>\n          <Button variant={'danger'} onClick={async () => {\n            await onDelete(key);\n\n            setShowDelete(false);\n          }}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n\n      <div className={'pb-4'}>\n        <Form.Control\n          size={'lg'}\n          type={'text'}\n          placeholder={'Title'}\n          value={title}\n          onChange={evt => dispatchUpdateTitle(evt.target.value)}\n        />\n      </div>\n\n      <div className={'pb-4'}>\n        <ButtonToolbar className={'justify-content-between'}>\n          <ButtonGroup>\n            <Button\n              onClick={async () => {\n                await onSave({ key, title, body });\n              }}\n            >\n              {\n                isSaving\n                  ? <Spinner\n                    as={'span'}\n                    animation={'border'}\n                    size={'sm'}\n                    role={'status'}\n                    aria-hidden={'true'}\n                  />\n                  : <FontAwesomeIcon icon={faSave} />\n              }\n            </Button>\n            <Button variant={'outline-secondary'} onClick={() => onDuplicate(key)}>\n              <FontAwesomeIcon icon={faCopy} />\n            </Button>\n          </ButtonGroup>\n          <p className={'mb-0 mt-2'}><small>Last saved {lastUpdateTime.toLocaleString('en-US')}</small></p>\n          <ButtonGroup>\n            <Button\n              variant={'outline-danger'}\n              onClick={() => setShowDelete(true)}\n            ><FontAwesomeIcon icon={faTrash} /></Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n\n      <Editor\n        ref={ref}\n        initialValue={body}\n        placeholder='Start writing'\n        previewStyle='vertical'\n        height='600px'\n        initialEditType='wysiwyg'\n        useCommandShortcut={true}\n        onChange={() => {\n          const contents = ref.current.getInstance().getMarkdown();\n          if (body === contents) {\n            return;\n          }\n\n          dispatchUpdateBody(contents);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    draft: getDraft(state),\n    isSaving: getNoteStatuses(state)[getActiveKey(state)] === noteStatus.saving,\n  }),\n  dispatch => ({\n    dispatchUpdateTitle: title => dispatch(updateTitle(title)),\n    dispatchUpdateBody: body => dispatch(updateBody(body)),\n    dispatchNewDraftInternal: () => dispatch(newDraftUpdatedInternal()),\n  }),\n)(NoteEditor);\n","import './App.css';\nimport {\n  Alert,\n  Col,\n  Container,\n  Row\n} from 'react-bootstrap';\nimport { useEffect, useRef } from 'react';\n\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\n\nimport ProfileView from './profile';\nimport FileBrowser from './files';\nimport NoteEditor from './editor';\nimport {\n  getContext,\n  getIsLoggedIn,\n  newNote,\n  getNoteKeys,\n  getNoteValues, loadNote, updateNote, getNoteStatuses, deleteNote, noteStatus\n} from './slices/nkSlice';\nimport { connect } from 'react-redux';\nimport { getActiveKey, loadAll, updateActiveKey } from './slices/workspaceSlice';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { draftSaved, getDraft, newDraft } from './slices/draftSlice';\nimport { noteFromParametersFactory, noteToValue, valueToNote } from './notes';\nimport Fuse from 'fuse.js';\nimport { getQuery } from './slices/filesSlice';\nimport { getLogin } from './slices/loginSlice';\n\nexport const getSortedKeys = (noteKeys, noteValues) => {\n  const filteredKeys = [...noteKeys];\n  filteredKeys.sort((i, j) => {\n    const a = noteValues[i];\n    const b = noteValues[j];\n\n    if (!a) {\n      return 1;\n    }\n\n    if (!b) {\n      return -1;\n    }\n\n    return b.lastUpdatedAt - a.lastUpdatedAt;\n  });\n\n  return filteredKeys;\n};\n\nfunction App({\n  context, isLoggedIn,\n  activeKey, dispatchUpdateActiveKey,\n  noteKeys, noteValues, noteStatuses,\n  draft, query,\n  dispatchNewNote, dispatchLoadNote, dispatchUpdateNote, dispatchDeleteNote,\n}) {\n  // create a search index\n  const fuseRef = useRef(new Fuse(\n    [],\n    {\n      includeScore: true,\n      ignoreLocation: true,\n      shouldSort: true,\n      keys: ['title', 'body',],\n    }));\n\n  // update index when note statuses change\n  useEffect(() => {\n    const collection = noteKeys.map(key => ({ key, ...(noteValues[key] || {}) }));\n    fuseRef.current.setCollection(collection);\n  }, [noteStatuses]);\n\n  // filter and sort keys\n  let filteredKeys;\n  if (query) {\n    const results = fuseRef.current.search(query);\n    filteredKeys = results.map(({ item: { key } }) => key);\n  } else {\n    // sort list of all keys by last update\n    filteredKeys = getSortedKeys(noteKeys, noteValues);\n  }\n\n  // generate file entries from list\n  const files = filteredKeys.map(k => {\n    const status = noteStatuses[k];\n    const { isDirty } = draft.drafts[k] || {};\n    const { lastUpdatedAt } = noteValues[k] || {};\n\n    const n = noteValues[k];\n    if (n) {\n      const { title } = n;\n      return { key: k, name: `${title}${isDirty ? '*' : ''}`, status, lastUpdatedAt };\n    }\n\n    return { key: k, name: k, status, lastUpdatedAt };\n  });\n\n  const onCreateNote = async from => {\n    const res = await dispatchNewNote(from);\n\n    let payload;\n    try {\n      payload = await unwrapResult(res);\n    } catch (error) {\n      return;\n    }\n\n    const { key, note } = payload;\n    dispatchUpdateActiveKey({ key, note });\n  };\n\n  const onSave = async () => {\n    await dispatchUpdateNote({\n      key: activeKey,\n      note: noteFromParametersFactory({\n        title: draft.drafts[activeKey].title,\n        body: draft.drafts[activeKey].body,\n      }),\n    });\n  };\n\n  const onDuplicate = async key => {\n    const source = valueToNote(noteToValue(noteValues[key]));\n    source.title += ' (Copy)';\n\n    return await onCreateNote(source);\n  };\n\n  const onDelete = async () => {\n    await dispatchDeleteNote(activeKey);\n\n    // select next note\n    for (let i = 0, len = filteredKeys.length; i < len; i++) {\n      const k = filteredKeys[i];\n      if (k !== activeKey) {\n        return await dispatchUpdateActiveKey({\n          key: k,\n          note: noteValues[k],\n        });\n      }\n    }\n  };\n\n  const onSelectNote = async key => {\n    let note = noteValues[key];\n    if (!note) {\n      let res = await dispatchLoadNote(key)\n\n      try {\n        res = unwrapResult(res);\n        note = res.note;\n      } catch (error) {\n        // if load note doesn't work, do not update active key\n        return;\n      }\n    }\n\n    dispatchUpdateActiveKey({ key, note });\n  };\n\n  return (\n    <Container className={'h-100 mh-100'}>\n      <ProfileView\n        context={context}\n      />\n\n      {\n        isLoggedIn && (\n          <Row className={'p-2 h-100'}>\n            <Col className={'p-2'} xs={4}>\n              <FileBrowser\n                files={files}\n                activeNote={activeKey}\n                onCreateNote={onCreateNote}\n                onNoteSelected={onSelectNote}\n              />\n            </Col>\n\n            <Col className={'p-2 h-100'}>\n              <NoteEditor onSave={onSave} onDuplicate={onDuplicate} onDelete={onDelete} />\n            </Col>\n          </Row>\n        )\n      }\n\n      {\n        !isLoggedIn && (\n          <Row className={'pt-5'}>\n            <Col>\n              <Alert variant={'dark'}>Register or login to continue.</Alert>\n            </Col>\n          </Row>\n        )\n      }\n\n    </Container>\n  );\n}\n\nexport default connect(\n  state => ({\n    login: getLogin(state),\n    context: getContext(state),\n    isLoggedIn: getIsLoggedIn(state),\n    activeKey: getActiveKey(state),\n    noteKeys: getNoteKeys(state),\n    noteValues: getNoteValues(state),\n    noteStatuses: getNoteStatuses(state),\n    draft: getDraft(state),\n    query: getQuery(state),\n  }),\n  dispatch => ({\n    dispatchNewNote: from => dispatch(newNote({ from })),\n    dispatchLoadNote: key => dispatch(loadNote(key)),\n    dispatchUpdateNote: async ({ key, note }) => {\n      const res = await dispatch(updateNote({ key, note }));\n\n      let value;\n      try {\n        value = await unwrapResult(res);\n      } catch (error) {\n        return res;\n      }\n\n      const { note: updatedNote } = value;\n      dispatch(draftSaved({ note: updatedNote, key }));\n\n      return res;\n    },\n    dispatchDeleteNote: async (key) => {\n      await dispatch(deleteNote(key));\n    },\n    dispatchUpdateActiveKey: ({ key, note }) => {\n      dispatch(updateActiveKey(key));\n      dispatch(newDraft({ key, note }));\n    },\n  }),\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport nkReducer from './slices/nkSlice';\nimport workspaceReducer from './slices/workspaceSlice';\nimport draftReducer from './slices/draftSlice';\nimport filesReducer from './slices/filesSlice';\nimport loginReducer from './slices/loginSlice';\nimport registerReducer from './slices/registerSlice';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger/src';\n\nconst store = configureStore({\n  reducer: {\n    nk: nkReducer,\n    workspace: workspaceReducer,\n    draft: draftReducer,\n    files: filesReducer,\n    login: loginReducer,\n    register: registerReducer,\n  },\n  middleware: [thunk, logger],\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}