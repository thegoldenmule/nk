{"version":3,"sources":["nk-js.js","notes.js","slices/nkSlice.js","slices/workspaceSlice.js","slices/draftSlice.js","slices/loginSlice.js","slices/registerSlice.js","profile.js","slices/filesSlice.js","utility.js","files.js","editor.js","App.js","index.js"],"names":["arrayBufferToBase64String","buffer","btoa","String","fromCharCode","apply","uintBufferToBase64String","Uint8Array","arrayBufferToString","buf","Uint16Array","stringToArrayBuffer","str","ArrayBuffer","length","bufView","i","strLen","charCodeAt","splitBuffer","view8","view16","subarray","getKeyMaterial","password","crypto","subtle","importKey","TextEncoder","encode","name","deriveKey","keyMaterial","salt","alg","deserializePrivateKey","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","bytes","str2ab","binaryDerString","binaryDer","wrap","_context","prev","next","window","atob","abrupt","hash","stop","_x","_x2","arguments","getUnwrappingKey","_x3","_x4","_getUnwrappingKey","_callee19","saltBuffer","_context19","sent","deserializeEncryptionKey","_ref4","_callee2","_ref3","wrappedKeyBuffer","unwrappingKey","_context2","unwrapKey","_x5","_x6","serializePrivateKey","_ref5","_callee3","key","exportKey","payload","_context3","_x7","_x8","serializeEncryptionKey","_ref6","_callee4","wrappingKey","wrapped","_context4","getRandomValues","wrapKey","_x9","_x10","serialize","_ref7","_callee5","context","copy","_context5","JSON","parse","stringify","keys","signing","privateKey","t0","console","log","encryption","t1","_x11","_x12","deserialize","_ref8","_callee6","data","_context$keys","_context6","Error","_x13","_x14","generateSigningPair","_ref9","_callee7","pair","_context7","generateKey","modulusLength","publicExponent","generateSymmetricKey","_ref10","_callee8","_context8","generateIv","exportPublicPEM","_ref11","_callee9","publicKey","exportedPublic","_context9","concat","match","join","_x15","aesParameters","iv","tagLength","contextWithKeys","_objectSpread","contextWithKeyNames","keyNames","_toConsumableArray","Set","contextWithUserId","userId","contextWithValue","keyName","value","plaintextValues","_defineProperty","contextWithoutKey","keyIndex","indexOf","splice","_context$plaintextVal","rest","_objectWithoutProperties","map","_toPropertyKey","isLoggedIn","undefined","encrypt","_ref13","_callee10","enc","encodedValue","cipher","signature","_context10","sign","_x16","_x17","_x18","decrypt","_ref14","_callee11","plaintext","_context11","TextDecoder","decode","_x19","_x20","_x21","register","_ref15","_callee12","signingKeys","encryptionKey","headers","json","res","_context12","Headers","append","fetch","url","method","body","t2","_x22","proveFetch","_ref16","_callee13","options","_json","success","error","signatureString","_context13","saltLength","_x23","_x24","_x25","getKeys","_ref17","_callee14","_json2","_context14","_x26","createData","_ref18","_callee15","_yield$encrypt","cipherValue","form","_context15","FormData","Blob","_x27","_x28","_x29","getData","_ref19","_callee16","_splitBuffer","_splitBuffer2","cipherBytes","_context16","arrayBuffer","_slicedToArray","_x30","_x31","updateData","_ref20","_callee17","_yield$encrypt2","_context17","_x32","_x33","_x34","deleteData","_ref21","_callee18","_context18","_x35","_x36","noteFromParametersFactory","title","createdAt","Date","getTime","lastUpdatedAt","valueToNote","noteToValue","note","noteStatus","initialState","noteKeys","noteValues","noteStatuses","saveContext","createAsyncThunk","getState","serialized","getContext","localStorage","setItem","newNote","from","rejectWithValue","newContext","replace","c","r","Math","random","toString","loadNote","updateNote","rejectedWithValue","notes","existingNote","getNoteValues","deleteNote","_ref12","nkSlice","_","echoBuf","a","b","len","max","floor","createSlice","reducers","initializeContext","state","Object","fromEntries","entries","k","v","n","logout","extraReducers","_extraReducers","pending","action","arg","meta","fulfilled","_ref18$payload","rejected","nodeStatuses","_ref19$payload","_ref20$payload","_ref22","_ref22$payload","_ref23","_ref24","_ref25","_ref25$payload","_state$noteStatuses","_state$noteValues","_ref26","getNk","_ref27","nk","createSelector","_ref28","getIsLoggedIn","_ref29","getNoteKeys","_ref30","_ref31","getNoteStatuses","_ref32","_nkSlice$actions","actions","workspaceSlice","activeKey","updateActiveKey","getActiveKey","workspace","draftSlice","drafts","newDraft","_ref$payload","currentDraft","isDirty","newDraftUpdatedInternal","updateTitle","updateBody","draftSaved","_ref4$payload","getDraft","draft","_draftSlice$actions","loginPhases","phase","contextData","submitPasswordLogin","dispatch","_getLogin","getLogin","loginSlice","loadAll","_getContext","_iterator","_step","sortedKeys","_sortedKeys","first","_createForOfIteratorHelper","s","done","e","f","finish","getSortedKeys","initLogin","getItem","updatePasswordLogin","login","_loginSlice$actions","registrationPhases","valueConfirmation","submitPasswordRegister","_getRegister","getRegister","registerSlice","initRegister","updatePasswordRegister","updatePasswordConfirmationRegister","_registerSlice$action","connect","dispatchLoginInit","dispatchUpdateLoginPassword","dispatchSubmitLoginPassword","dispatchRegisterInit","dispatchUpdateRegisterPassword","dispatchUpdateRegisterPasswordConfirmation","dispatchSubmitRegisterPassword","dispatchLogout","loginPhase","loginValue","loginError","registerPhase","registerValue","registerError","useEffect","passwordRef","useRef","current","focus","isValidRegisterPassword","_jsxs","children","Modal","centered","backdrop","show","_jsx","Header","Title","Body","Form","Control","ref","size","type","placeholder","onChange","evt","target","className","Alert","variant","Footer","Button","onClick","disabled","Container","Row","Col","decrypting","md","src","alt","Navbar","bg","expand","Brand","width","style","marginRight","Toggle","Collapse","id","Nav","Text","Spinner","animation","role","_Fragment","filesSlice","query","searchFocus","updateQuery","focusSearch","getFiles","files","getQuery","getSearchFocus","_filesSlice$actions","blurOnEscape","code","ctrlKey","metaKey","blur","dispatchUpdateQuery","_ref$files","activeNote","onCreateNote","onNoteSelected","_useState","useState","_useState2","isCreating","setIsCreating","searchRef","listItems","ListGroup","Item","as","_loop","content","_files$i","status","lastUpdateTime","setTime","FontAwesomeIcon","icon","faExclamationTriangle","faLock","xs","lg","xl","toLocaleDateString","push","active","InputGroup","FormControl","onKeyDown","Append","faTimesCircle","Hotkey","_ref$hotkey","hotkey","useHotkeys","event","preventDefault","isSaving","dispatchUpdateTitle","dispatchUpdateBody","dispatchNewDraftInternal","dispatchSearchFocus","_onSave","onSave","_onDuplicate","onDuplicate","_onNew","onNew","_onDelete","onDelete","_ref2$draft","editorRef","titleRef","showDelete","setShowDelete","getInstance","isMarkdownMode","changeMode","hotkeyComponents","setMarkdown","onHide","ButtonToolbar","ButtonGroup","faSave","faCopy","toLocaleString","faTrash","Editor","initialValue","previewStyle","height","initialEditType","useCommandShortcut","usageStatistics","contents","getMarkdown","onKeydown","eventKey","_i","_map","filteredKeys","sort","j","dispatchNewNote","dispatchLoadNote","dispatchUpdateNote","_dispatchUpdateNote","updatedNote","unwrapResult","dispatchDeleteNote","_dispatchDeleteNote","dispatchUpdateActiveKey","fuseRef","Fuse","includeScore","ignoreLocation","shouldSort","collection","setCollection","results","search","item","_payload","source","onSelectNote","ProfileView","FileBrowser","NoteEditor","store","configureStore","reducer","nkReducer","workspaceReducer","draftReducer","filesReducer","loginReducer","registerReducer","middleware","thunk","logger","ReactDOM","render","React","StrictMode","Provider","App","document","getElementById"],"mappings":"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","file":"static/js/main.a39d1c9d.chunk.js","sourcesContent":["const uintBufferToBase64String = buffer => btoa(String.fromCharCode.apply(null, buffer));\nconst arrayBufferToBase64String = buffer => uintBufferToBase64String(new Uint8Array(buffer));\n\nconst arrayBufferToString = buf => {\n  return String.fromCharCode.apply(null, new Uint16Array(buf));\n};\n\nconst stringToArrayBuffer = str => {\n  const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n\n  return buf;\n};\n\nconst splitBuffer = buffer => {\n  const view8 = new Uint8Array(buffer);\n  const view16 = new Uint16Array(buffer);\n  return [view8.subarray(0, 12), view16.subarray(6)];\n};\n\nconst getKeyMaterial = password => crypto.subtle.importKey(\n  \"raw\",\n  new TextEncoder().encode(password),\n  { name: 'PBKDF2' },\n  false,\n  [\"deriveBits\", \"deriveKey\"]\n);\n\nconst deriveKey = (keyMaterial, salt, alg) => crypto.subtle.deriveKey(\n  {\n    \"name\": \"PBKDF2\",\n    salt,\n    \"iterations\": 100000,\n    \"hash\": \"SHA-256\"\n  },\n  keyMaterial,\n  { \"name\": alg, \"length\": 256},\n  true,\n  [ \"wrapKey\", \"unwrapKey\" ]\n);\n\nconst deserializePrivateKey = async ({ bytes }, password) => {\n  const str2ab = (str) => {\n    const buf = new ArrayBuffer(str.length);\n    const bufView = new Uint8Array(buf);\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n      bufView[i] = str.charCodeAt(i);\n    }\n    return buf;\n  };\n\n  // todo: decrypt bytes\n\n  const binaryDerString = window.atob(bytes);\n  const binaryDer = str2ab(binaryDerString);\n\n  return crypto.subtle.importKey(\n    \"pkcs8\",\n    binaryDer,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign']);\n};\n\nasync function getUnwrappingKey(password, saltBuffer) {\n  const keyMaterial = await getKeyMaterial(password);\n\n  return window.crypto.subtle.deriveKey(\n    {\n      \"name\": \"PBKDF2\",\n      salt: saltBuffer,\n      \"iterations\": 100000,\n      \"hash\": \"SHA-256\"\n    },\n    keyMaterial,\n    { \"name\": \"AES-KW\", \"length\": 256},\n    true,\n    [ \"wrapKey\", \"unwrapKey\" ]\n  );\n}\n\nconst deserializeEncryptionKey = async ({ salt, bytes }, password) => {\n  const saltBuffer = new Uint8Array(stringToArrayBuffer(salt));\n  const wrappedKeyBuffer = stringToArrayBuffer(bytes);\n\n  const unwrappingKey = await getUnwrappingKey(password, saltBuffer);\n\n  return window.crypto.subtle.unwrapKey(\n    \"raw\",\n    wrappedKeyBuffer,\n    unwrappingKey,\n    \"AES-KW\",\n    \"AES-GCM\",\n    true,\n    [\"encrypt\", \"decrypt\"]\n  );\n};\n\nconst serializePrivateKey = async (key, password) => {\n  // TODO: encrypt\n  const exportKey = await crypto.subtle.exportKey(\"pkcs8\", key);\n\n  const payload = {\n    bytes: arrayBufferToBase64String(exportKey),\n  };\n\n  return payload;\n}\n\nconst serializeEncryptionKey = async (key, password) => {\n  const keyMaterial = await getKeyMaterial(password);\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n  const wrappingKey = await deriveKey(keyMaterial, salt, 'AES-KW');\n\n  const wrapped = await crypto.subtle.wrapKey(\n    'raw',\n    key,\n    wrappingKey,\n    'AES-KW',\n  );\n\n  return {\n    salt: arrayBufferToString(salt.buffer),\n    bytes: arrayBufferToString(wrapped),\n  };\n};\n\nconst serialize = async (context, password) => {\n  const copy = JSON.parse(JSON.stringify(context));\n\n  copy.keys.signing = {};\n  try {\n    copy.keys.signing.privateKey = await serializePrivateKey(context.keys.signing.privateKey, password);\n  } catch (error) {\n    console.log('Could not serialize private key.', error);\n  }\n\n  try {\n    copy.keys.encryption = await serializeEncryptionKey(context.keys.encryption, password);\n  } catch (error) {\n    console.log('Could not serialize encryption key.', error)\n  }\n\n  return JSON.stringify(copy);\n};\n\nconst deserialize = async (data, password) => {\n  const context = JSON.parse(data);\n\n  const { signing: { privateKey }, encryption } = context.keys;\n  context.keys = {\n    signing: {},\n  };\n\n  try {\n    context.keys.signing.privateKey = await deserializePrivateKey(privateKey, password);\n  } catch (error) {\n    throw new Error('Could not create private key.');\n  }\n\n  try {\n    context.keys.encryption = await deserializeEncryptionKey(encryption, password);\n  } catch (error) {\n    throw new Error('Could not create symmetric encryption key.');\n  }\n\n  return context;\n};\n\nconst generateSigningPair = async () => {\n  const pair = await crypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign', 'verify'],\n  );\n\n  return pair;\n};\n\nconst generateSymmetricKey = async () => await crypto.subtle.generateKey(\n  {\n    name: 'AES-GCM',\n    length: 256,\n  },\n  true,\n  ['encrypt', 'decrypt']);\n\nconst generateIv = () => window.crypto.getRandomValues(new Uint8Array(12));\n\nconst exportPublicPEM = async (publicKey) => {\n  let exportedPublic;\n  try {\n    exportedPublic = await crypto.subtle.exportKey('spki', publicKey);\n  } catch (error) {\n    throw new Error(`Could not export public key: ${error}.`);\n  }\n\n  const key = arrayBufferToBase64String(exportedPublic)\n    .match(/.{1,64}/g)\n    .join('\\n');\n\n  return `-----BEGIN PUBLIC KEY-----\\n${key}\\n-----END PUBLIC KEY-----`;\n};\n\nconst aesParameters = iv => ({\n  name: 'AES-GCM',\n  tagLength: 128,\n  iv,\n});\n\nconst createContext = () => ({\n  url: 'https://nk-server.thegoldenmule.com',\n  //url: 'http://localhost',\n  userId: undefined,\n  keys: {\n    signing: undefined,\n    encryption: undefined,\n  },\n  keyNames: [],\n  plaintextValues: {},\n});\n\nconst contextWithConfig = (context, { url }) => ({\n  ...context,\n  url\n});\n\nconst contextWithKeys = (context, signing, encryption) => ({\n  ...context,\n  keys: {\n    signing,\n    encryption,\n  },\n});\n\nconst contextWithKeyNames = (context, keyNames) => ({\n  ...context,\n  keyNames: [...new Set(keyNames)],\n});\n\nconst contextWithUserId = (context, userId) => ({\n  ...context,\n  userId,\n});\n\nconst contextWithValue = (context, keyName, value) => contextWithKeyNames({\n  ...context,\n  plaintextValues: {\n    ...context.plaintextValues,\n    [keyName]: value\n  },\n}, [...context.keyNames, keyName]);\n\nconst contextWithoutKey = (context, keyName) => {\n  const keyNames = [...context.keyNames];\n  const keyIndex = keyNames.indexOf(keyName);\n  if (-1 !== keyIndex) {\n    keyNames.splice(keyIndex, 1);\n  }\n\n  const { plaintextValues: { [keyName]: _, ...rest } } = context;\n\n  return {\n    ...context,\n    keyNames,\n    plaintextValues: rest,\n  };\n};\n\nconst isLoggedIn = context => context.userId !== undefined;\n\nconst encrypt = async (context, iv, value) => {\n  // create Uint8Array from value\n  const enc = new TextEncoder();\n  const encodedValue = enc.encode(value);\n\n  // encrypt with hard symmetric encryption\n  let cipher;\n  try {\n    cipher = await crypto.subtle.encrypt(\n      aesParameters(iv),\n      context.keys.encryption,\n      encodedValue\n    );\n  } catch (error) {\n    throw new Error(`Could not encrypt value: ${error}.`);\n  }\n\n  // sign ciphertext with signing key\n  let signature;\n  try {\n    signature = await window.crypto.subtle.sign(\n      {\n        name: 'RSASSA-PKCS1-v1_5',\n      },\n      context.keys.signing.privateKey,\n      new Uint8Array(cipher),\n    );\n  } catch (error) {\n    throw new Error(`Could not sign value: ${error}.`);\n  }\n\n  return {\n    value: cipher,\n    signature: signature,\n  }\n};\n\nconst decrypt = async (context, iv, value) => {\n  let plaintext;\n  try {\n    plaintext = await crypto.subtle.decrypt(\n      aesParameters(iv),\n      context.keys.encryption,\n      value,\n    );\n  } catch (error) {\n    throw new Error(`Could not decrypt value: ${error}.`);\n  }\n\n  return new TextDecoder().decode(plaintext);\n};\n\nconst register = async (context) => {\n  // generate signing pair\n  let signingKeys;\n  try {\n    signingKeys = await generateSigningPair();\n  } catch (error) {\n    throw new Error(`Could not generate signing key pair: ${error}.`);\n  }\n\n  // generate symmetric key\n  let encryptionKey;\n  try {\n    encryptionKey = await generateSymmetricKey();\n  } catch (error) {\n    throw new Error(`Could not generate encryption key: ${error}.`);\n  }\n\n  // export\n  const key = await exportPublicPEM(signingKeys.publicKey);\n\n  // create user\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"text/plain\");\n\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/user`,\n      {\n        method: 'post',\n        body: key,\n        headers,\n      });\n    json = await res.json();\n  } catch (e) {\n    throw e;\n  }\n\n  return contextWithKeys(\n    contextWithUserId(context, json.userId),\n    signingKeys,\n    encryptionKey,\n  );\n};\n\nconst proveFetch = async (context, url, options) => {\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/proof/${context.userId}`,\n      {\n        method: 'post',\n      }\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  const { success, error, value } = json;\n  if (!success) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  // sign\n  const signature = await crypto.subtle.sign(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      saltLength: 32\n    },\n    context.keys.signing.privateKey,\n    new TextEncoder().encode(value));\n  const signatureString = arrayBufferToBase64String(signature);\n\n  // create headers object\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // append proof + signature\n  options.headers['X-Nk-Proof'] = value;\n  options.headers['X-Nk-Proof-Sig'] = signatureString;\n\n  return await fetch(url, options);\n};\n\nconst getKeys = async (context) => {\n  let json;\n  try {\n    const res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}`\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  const { success, error, keys } = json;\n  if (!success) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  return contextWithKeyNames(context, keys);\n};\n\nconst createData = async (context, keyName, value) => {\n  if (value.length % 2 === 1) {\n    value += ' ';\n  }\n\n  const iv = generateIv();\n  const { value: cipherValue, signature } = await encrypt(context, iv, value);\n\n  // prepare binary data\n  const form = new FormData();\n  form.append('Key', keyName);\n  form.append('Iv', new Blob([iv]));\n  form.append('Sig', new Blob([signature]));\n  form.append('Payload', new Blob([cipherValue]));\n\n  // send binary data\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}`,\n      {\n        method: 'post',\n        body: form,\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not create data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not create data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nconst getData = async (context, keyName) => {\n  // fetch\n  let res;\n  try {\n    res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}/${keyName}`\n    );\n  } catch (error) {\n    throw new Error(`Could not prove fetch: ${error}.`);\n  }\n\n  // read response\n  let buffer;\n  try {\n    buffer = await res.arrayBuffer();\n  } catch (error) {\n    throw new Error(`Could not read response: ${error}.`);\n  }\n\n  // split off iv\n  const [iv, cipherBytes] = splitBuffer(buffer);\n\n  // decrypt response\n  let plaintext;\n  try {\n    plaintext = await decrypt(context, iv, cipherBytes);\n  } catch (error) {\n    throw new Error(`Could not decrypt data: ${error}.`);\n  }\n\n  return contextWithValue(context, keyName, plaintext);\n};\n\nconst updateData = async (context, keyName, value) => {\n  if (value.length % 2 === 1) {\n    value += ' ';\n  }\n\n  const iv = generateIv();\n  const { value: cipherValue, signature } = await encrypt(context, iv, value);\n\n  const form = new FormData();\n  form.append('Iv', new Blob([iv]));\n  form.append('Sig', new Blob([signature]));\n  form.append('Payload', new Blob([cipherValue]));\n\n  // send\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}/${keyName}`,\n      {\n        method: 'put',\n        body: form\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not update data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not update data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nconst deleteData = async (context, keyName) => {\n  let json;\n  try {\n    const res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}/${keyName}`,\n      {\n        method: 'delete'\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not delete data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not delete data: server returned false.');\n  }\n\n  return contextWithoutKey(context, keyName);\n};\n\nconst utils = { arrayBufferToString, stringToArrayBuffer };\nexport { utils, createContext, contextWithConfig, isLoggedIn, register, createData, updateData, getData, deleteData, getKeys, serialize, deserialize };\n","const noteFromParametersFactory = ({ title, body }) => ({\n  title,\n  body,\n  createdAt: new Date().getTime(),\n  lastUpdatedAt: new Date().getTime(),\n});\nconst noteFactory = () => noteFromParametersFactory({\n  title: 'New Note',\n  body: '',\n});\n\nconst valueToNote = value => value ? JSON.parse(value) : undefined;\nconst noteToValue = note => note ? JSON.stringify(note) : undefined;\n\nexport { noteFromParametersFactory, noteFactory, valueToNote, noteToValue };\n","import {\n  createContext,\n  createData, deleteData,\n  getData,\n  isLoggedIn,\n  serialize,\n  updateData\n} from '../nk-js';\nimport { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit';\nimport { noteFactory, noteToValue, valueToNote } from '../notes';\n\nexport const noteStatus = {\n  unloaded: 'unloaded',\n  loading: 'loading',\n  loaded: 'loaded',\n  saving: 'saving',\n  deleting: 'deleting',\n  error: 'error',\n};\n\nconst initialState = {\n  isLoggedIn: false,\n  context: createContext(),\n  noteKeys: [],\n  noteValues: {},\n  noteStatuses: {},\n};\n\n// taken from https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nconst newKey = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n  // eslint-disable-next-line\n  const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n  return v.toString(16);\n});\n\nexport const saveContext = createAsyncThunk(\n  'nk/saveContext',\n  async (password, { getState }) => {\n    const context = getContext(getState());\n    const serialized = await serialize(context, password);\n\n    // save!\n    localStorage.setItem('_context', serialized);\n  },\n);\n\nexport const newNote = createAsyncThunk(\n  'nk/new-note',\n  async ({ from }, { getState, rejectWithValue }) => {\n    const context = getContext(getState());\n    const key = newKey();\n    const note = from || noteFactory();\n\n    let newContext;\n    try {\n      newContext = await createData(context, key, noteToValue(note));\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n\n    return { key, note, context: newContext };\n  },\n);\n\nexport const loadNote = createAsyncThunk(\n  'nk/load-note',\n  async (key, { getState, rejectWithValue }) => {\n    const context = getContext(getState());\n    let newContext;\n    try {\n      newContext = await getData(context, key);\n    } catch (error) {\n      return rejectWithValue({ key, error });\n    }\n\n    const note = valueToNote(newContext.plaintextValues[key])\n\n    return { key, note, context: newContext };\n  }\n);\n\nexport const updateNote = createAsyncThunk(\n  'nk/update-note',\n  async ({ key, note }, { getState, rejectedWithValue }) => {\n    // get note out of local\n    const notes = getNoteValues(getState());\n    const existingNote = notes[key];\n\n    // update\n    note.createdAt = existingNote.createdAt || new Date().getTime();\n    note.lastUpdatedAt = new Date().getTime();\n\n    const value = noteToValue(note);\n    const context = getContext(getState());\n    let newContext;\n    try {\n      newContext = await updateData(context, key, value);\n    } catch (error) {\n      return rejectedWithValue({ key, error });\n    }\n\n    return { key, note, context: newContext };\n  },\n);\n\nexport const deleteNote = createAsyncThunk(\n  'nk/delete-note',\n  async (key, { getState, rejectedWithValue }) => {\n    let newContext;\n    try {\n      newContext = await deleteData(getContext(getState()), key);\n    } catch (error) {\n      return rejectedWithValue({ key, error });\n    }\n\n    return { key, context: newContext };\n  },\n);\n\nexport const echo = createAsyncThunk(\n  'nk/echo',\n  async (_, { getState, rejectedWithValue }) => {\n    const length = Math.max(6, Math.floor(Math.random() * 1000));\n    const buf = new Uint8Array(length);\n    await crypto.getRandomValues(buf);\n\n    const form = new FormData();\n    form.append('Payload', new Blob([buf]));\n\n    let echoBuf;\n    try {\n      const res = await fetch(\n        `${getContext(getState()).url}/utilities/echo`,\n        {\n          method: 'post',\n          body: form,\n        });\n      echoBuf = await res.arrayBuffer();\n    } catch (error) {\n      return rejectedWithValue(error);\n    }\n\n    const a = new Uint8Array(buf);\n    const b = new Uint8Array(echoBuf);\n    for (let i = 0, len = a.length; i < len; i++) {\n      if (a[i] !== b[i]) {\n        console.log('FAILED', length, a, b);\n        return rejectedWithValue(`Values don't match.`);\n      }\n    }\n\n    console.log('SUCCEEDED');\n  }\n);\n\nconst parseContextNodes = (plaintextValues) => Object.fromEntries(\n  Object.entries(plaintextValues).map(\n    ([k, v]) => [k, valueToNote(v)]));\n\nconst nkSlice = createSlice({\n  name: 'nk',\n  initialState,\n  reducers: {\n    initializeContext(state, { payload: context }) {\n      return {\n        ...state,\n        context,\n        isLoggedIn: isLoggedIn(context),\n        noteKeys: context.keyNames,\n        notes: parseContextNodes(context.plaintextValues),\n        noteStatuses: Object.fromEntries(context.keyNames.map(n => [n, context.plaintextValues[n] ? noteStatus.loaded : noteStatus.unloaded])),\n      };\n    },\n    logout(state) {\n      return {\n        ...state,\n        isLoggedIn: false,\n        context: createContext(),\n      };\n    },\n  },\n  extraReducers: {\n    [newNote.pending]: (state, action) => {\n      const { meta: { arg } } = action;\n\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [arg]: noteStatus.loading,\n        },\n      };\n    },\n    [newNote.fulfilled]: (state, { payload: { key, note, context } }) => ({\n      ...state,\n      noteKeys: context.keyNames,\n      noteValues: {\n        ...state.noteValues,\n        [key]: note,\n      },\n      noteStatus: {\n        ...state.noteStatuses,\n        [key]: noteStatus.loaded,\n      },\n      context\n    }),\n    [newNote.rejected]: (state, action) => ({\n      ...state,\n      // TODO: add error\n    }),\n    [loadNote.pending]: (state, action) => {\n      const { meta: { arg } } = action;\n      return {\n        ...state,\n        nodeStatuses: {\n          ...state.noteStatuses,\n          [arg]: noteStatus.loading,\n        },\n      };\n    },\n    [loadNote.fulfilled]: (state, { payload: { key, context, note } }) => ({\n      ...state,\n      context,\n      noteValues: {\n        ...state.noteValues,\n        [key]: note,\n      },\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.loaded\n      },\n    }),\n    [loadNote.rejected]: (state, { payload: { key, error } }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.error\n      },\n    }),\n    [updateNote.pending]: (state, { meta: { arg: { key } } }) => {\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.saving,\n        },\n      };\n    },\n    [updateNote.fulfilled]: (state, { payload: { key, note, context } }) => {\n      return {\n        ...state,\n        context,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.loaded,\n        },\n        noteValues: {\n          ...state.noteValues,\n          [key]: note,\n        }\n      };\n    },\n    [updateNote.rejected]: (state, { key, error }) => {\n      return {\n        ...state,\n        noteStatuses: {\n          ...state.noteStatuses,\n          [key]: noteStatus.error,\n        },\n      };\n    },\n    [deleteNote.pending]: (state, { meta: { arg: key } }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.deleting,\n      },\n    }),\n    [deleteNote.fulfilled]: (state, { payload: { key, context } }) => {\n      const {\n        noteStatuses: { [key]: s, ...noteStatuses },\n        noteValues: { [key]: v, ...noteValues },\n      } = state;\n\n      const { keyNames: noteKeys } = context;\n\n      return {\n        ...state,\n        context,\n        noteKeys,\n        noteStatuses,\n        noteValues,\n      };\n    },\n    [deleteNote.rejected]: (state, { key }) => ({\n      ...state,\n      noteStatuses: {\n        ...state.noteStatuses,\n        [key]: noteStatus.error,\n      },\n    }),\n  },\n});\n\nexport const getNk = ({ nk }) => nk;\nexport const getContext = createSelector(getNk, ({ context }) => context);\nexport const getIsLoggedIn = createSelector(getNk, ({ isLoggedIn }) => isLoggedIn);\nexport const getNoteKeys = createSelector(getNk, ({ noteKeys }) => noteKeys);\nexport const getNoteValues = createSelector(getNk, ({ noteValues }) => noteValues);\nexport const getNoteStatuses = createSelector(getNk, ({ noteStatuses }) => noteStatuses);\n\nexport const { initializeContext, logout, } = nkSlice.actions;\nexport default nkSlice.reducer;\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\n\nconst workspaceSlice = createSlice({\n  name: 'workspace',\n  initialState: {\n    activeKey: '',\n  },\n  reducers: {\n    updateActiveKey(state, action) {\n      return {\n        ...state,\n        activeKey: action.payload,\n      };\n    },\n  },\n});\n\nexport const getWorkspace = ({ workspace }) => workspace;\nexport const getActiveKey = createSelector(getWorkspace, ({ activeKey }) => activeKey);\n\nexport const { updateActiveKey } = workspaceSlice.actions;\nexport default workspaceSlice.reducer;\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  drafts: {},\n  newDraft: false,\n};\n\nconst draftSlice =  createSlice(\n  {\n    name: 'draft',\n    initialState,\n    reducers: {\n      newDraft(state, { payload: { key, note } }) {\n        const currentDraft = state.drafts[key];\n        return {\n          ...state,\n          key,\n          drafts: {\n            ...state.drafts,\n            [key]: currentDraft || { ...note, isDirty: false }\n          },\n          newDraft: true,\n        };\n      },\n\n      newDraftUpdatedInternal(state) {\n        return {\n          ...state,\n          newDraft: false,\n        };\n      },\n\n      updateTitle(state, { payload: title }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [state.key]: {\n              ...state.drafts[state.key],\n              title,\n              isDirty: true,\n            },\n          },\n        };\n      },\n\n      updateBody(state, { payload: body }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [state.key]: {\n              ...state.drafts[state.key],\n              body,\n              isDirty: true,\n            },\n          },\n        };\n      },\n\n      draftSaved(state, { payload: { key, note } }) {\n        return {\n          ...state,\n          drafts: {\n            ...state.drafts,\n            [key]: {\n              ...state.drafts[key],\n              lastUpdatedAt: note.lastUpdatedAt,\n              isDirty: false,\n            },\n          },\n        };\n      },\n    },\n  },\n);\n\nexport const getDraft = ({ draft }) => draft;\nexport const getDraftKey = createSelector(getDraft, ({ key }) => key);\n\nexport const { newDraft, newDraftUpdatedInternal, updateTitle, updateBody, draftSaved } = draftSlice.actions;\nexport default draftSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createContext, deserialize, getKeys } from '../nk-js';\nimport { getContext, getNoteValues, initializeContext, loadNote } from './nkSlice';\nimport { updateActiveKey } from './workspaceSlice';\nimport { newDraft } from './draftSlice';\nimport { getSortedKeys } from '../App';\n\nexport const loginPhases = {\n  uninitialized: 'uninitialized',\n  requestingCredentials: 'requestingCredentials',\n  decrypting: 'decrypting',\n  completeLoggedIn: 'completeLoggedIn',\n  completeAnonymous: 'completeAnon',\n};\n\nconst initialState = {\n  phase: loginPhases.uninitialized,\n  value: '',\n  error: '',\n  contextData: '',\n  context: null,\n};\n\nexport const submitPasswordLogin = createAsyncThunk(\n  'login/submit',\n  async (_, { getState, dispatch, rejectWithValue, }) => {\n    const { value, contextData } = getLogin(getState());\n\n    const { decrypt } = loginSlice.actions;\n    dispatch(decrypt());\n\n    let context;\n    try {\n      context = await deserialize(contextData, value);\n    } catch (error) {\n      return rejectWithValue('Invalid password.');\n    }\n\n    try {\n      context = await getKeys(context);\n    } catch (error) {\n      return;\n    }\n\n    dispatch(initializeContext(context));\n    await dispatch(loadAll());\n\n    return;\n  });\n\nexport const loadAll = createAsyncThunk(\n  'login/loadAll',\n  async (action, { getState, dispatch }) => {\n    const { keyNames } = getContext(getState());\n    for (const key of keyNames) {\n      await dispatch(loadNote(key));\n    }\n\n    const notes = getNoteValues(getState());\n    const sortedKeys = getSortedKeys(keyNames, notes);\n    const [first, ] = sortedKeys;\n    if (first) {\n      dispatch(updateActiveKey(first));\n      dispatch(newDraft({ key: first, note: notes[first] }));\n    }\n  },\n);\n\nconst loginSlice = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    initLogin: (state, action) => {\n      const contextData = localStorage.getItem('_context');\n      if (!contextData) {\n        return {\n          ...state,\n          phase: loginPhases.completeAnonymous,\n          context: createContext(),\n          error: '',\n        };\n      }\n\n      return {\n        ...state,\n        phase: loginPhases.requestingCredentials,\n        contextData,\n        value: '',\n        error: '',\n      };\n    },\n    decrypt: (state) => ({\n      ...state,\n      phase: loginPhases.decrypting,\n    }),\n    updatePasswordLogin: (state, { payload }) => ({ ...state, value: payload, }),\n  },\n\n  extraReducers: {\n    [submitPasswordLogin.rejected]: (state, { payload: error }) => ({\n      ...state,\n      phase: loginPhases.requestingCredentials,\n      error,\n    }),\n    [submitPasswordLogin.fulfilled]: () => ({\n      phase: loginPhases.completeLoggedIn,\n    }),\n  },\n});\n\nexport const getLogin = ({ login }) => login;\nexport const getPassword = ({ value }) => value;\n\nexport const { initLogin, updatePasswordLogin } = loginSlice.actions;\nexport default loginSlice.reducer;\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { createContext, register } from '../nk-js';\nimport { initializeContext, saveContext } from './nkSlice';\n\nexport const registrationPhases = {\n  uninitialized: 'uninitialized',\n  requestingCredentials: 'requestingCredentials',\n  registering: 'registering',\n  completeRegistration: 'completeRegistration',\n};\n\nconst initialState = {\n  phase: registrationPhases.uninitialized,\n  value: '',\n  valueConfirmation: '',\n  error: '',\n};\n\nexport const submitPasswordRegister = createAsyncThunk(\n  'register/submit',\n  async (action, { getState, dispatch, rejectedWithValue }) => {\n    let context;\n    try {\n      context = await register(createContext())\n    } catch (error) {\n      return rejectedWithValue(error);\n    }\n\n    dispatch(initializeContext(context));\n\n    const { value } = getRegister(getState());\n    await dispatch(saveContext(value))\n\n    return { context };\n  },\n);\n\nconst registerSlice = createSlice(\n  {\n    name: 'register',\n    initialState,\n    reducers: {\n      initRegister: (state, action) => ({\n        ...state,\n        phase: registrationPhases.requestingCredentials,\n      }),\n      updatePasswordRegister: (state, { payload: value }) => ({\n        ...state,\n        value,\n      }),\n      updatePasswordConfirmationRegister: (state, { payload: valueConfirmation }) => ({\n        ...state,\n        valueConfirmation,\n      }),\n    },\n    extraReducers: {\n      [submitPasswordRegister.pending]: (state) => ({\n        ...state,\n        phase: registrationPhases.registering,\n      }),\n      [submitPasswordRegister.rejected]: (state, error) => ({\n        phase: registrationPhases.requestingCredentials,\n        error,\n      }),\n      [submitPasswordRegister.fulfilled]: () => ({\n        phase: registrationPhases.completeRegistration,\n      }),\n    },\n  },\n);\n\nexport const getRegister = ({ register }) => register;\n\nexport const { initRegister, updatePasswordRegister, updatePasswordConfirmationRegister } = registerSlice.actions;\nexport default registerSlice.reducer;\n","import { Alert, Button, Col, Container, Form, Modal, Nav, Navbar, Row, Spinner } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { getContext, getIsLoggedIn, } from './slices/nkSlice';\nimport {\n  getLogin, initLogin,\n  loginPhases,\n  submitPasswordLogin,\n  updatePasswordLogin\n} from './slices/loginSlice';\nimport { useEffect, useRef } from 'react';\nimport {\n  getRegister,\n  initRegister,\n  registrationPhases,\n  submitPasswordRegister, updatePasswordConfirmationRegister,\n  updatePasswordRegister\n} from './slices/registerSlice';\n\nconst ProfileView = ({\n  isLoggedIn, login, register,\n  dispatchLoginInit, dispatchUpdateLoginPassword, dispatchSubmitLoginPassword,\n  dispatchRegisterInit, dispatchUpdateRegisterPassword, dispatchUpdateRegisterPasswordConfirmation, dispatchSubmitRegisterPassword,\n  dispatchLogout, }) => {\n\n  const { phase: loginPhase, value: loginValue, error: loginError, } = login;\n  const { phase: registerPhase, value: registerValue, valueConfirmation, error: registerError, } = register;\n\n  const renderPhase = () => {\n    if (isLoggedIn) {\n      return (\n        <Nav>\n          <Navbar.Text>Signed in.&nbsp;&nbsp;</Navbar.Text>\n          <Button\n            variant={'outline-secondary'}\n            onClick={() => dispatchLogout()}\n          >Logout</Button>\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.decrypting || registerPhase === registrationPhases.registering) {\n      return (\n        <Nav>\n          <Spinner animation={'border'} size={'sm'} role={'status'} />\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.completeAnonymous || loginPhase === loginPhases.uninitialized) {\n      return (\n        <Nav>\n          <Button\n            className={'mr-sm-2'}\n            onClick={() => dispatchRegisterInit()}\n          >\n            Register\n          </Button>\n        </Nav>\n      );\n    }\n\n    if (loginPhase === loginPhases.requestingCredentials || registerPhase === registrationPhases.requestingCredentials) {\n      return (\n        <></>\n      );\n    }\n  };\n\n  useEffect(() => dispatchLoginInit(), [dispatchLoginInit]);\n  const passwordRef = useRef(null);\n  useEffect(() => passwordRef.current && passwordRef.current.focus());\n\n  const isValidRegisterPassword = registerValue\n    && valueConfirmation\n    && registerValue === valueConfirmation\n    && registerValue.length >= 8;\n\n  return (\n    <div>\n      <Modal centered backdrop={'static'} show={loginPhase === loginPhases.requestingCredentials}>\n        <Modal.Header>\n          <Modal.Title>Please enter your password.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            ref={passwordRef}\n            size={'sm'}\n            type={'password'}\n            placeholder={'Password'}\n            value={loginValue}\n            onChange={evt => dispatchUpdateLoginPassword(evt.target.value)}\n          />\n          {\n            loginError && <div className={'pt-4'}><Alert variant={'danger'}>{loginError}</Alert></div>\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant={'primary'} onClick={() => dispatchSubmitLoginPassword()}>Login</Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered backdrop={'static'} show={registerPhase === registrationPhases.requestingCredentials}>\n        <Modal.Header>\n          <Modal.Title>Please enter a secure password.</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Control\n            size={'sm'}\n            type={'password'}\n            placeholder={'Password'}\n            value={registerValue}\n            onChange={evt => dispatchUpdateRegisterPassword(evt.target.value)}\n          />\n          <div className={'p-2'} />\n          <Form.Control\n            size={'sm'}\n            type={'password'}\n            placeholder={'Re-enter Password'}\n            value={valueConfirmation}\n            onChange={evt => dispatchUpdateRegisterPasswordConfirmation(evt.target.value)}\n          />\n          {\n            registerError && <div className={'pt-4'}><Alert variant={'danger'}>{registerError}</Alert></div>\n          }\n        </Modal.Body>\n        <Modal.Footer>\n          <Button disabled={!isValidRegisterPassword} variant={'primary'} onClick={() => dispatchSubmitRegisterPassword()}>Register</Button>\n        </Modal.Footer>\n      </Modal>\n      <Modal centered backdrop={'static'} show={loginPhase === loginPhases.decrypting || registerPhase === registrationPhases.registering}>\n        <Modal.Body>\n          <Container>\n            <Row>\n              <Col>\n                {\n                  loginPhase === loginPhase.decrypting\n                    ? (<p className={'text-center lead'}>Decrypting...</p>)\n                    : (<p className={'text-center lead'}>Generating Keys...</p>)\n                }\n              </Col>\n            </Row>\n            <Row>\n              <Col></Col>\n              <Col md={'auto'}>\n                <img src={'./infinity.gif'} alt={'Loading...'} />\n              </Col>\n              <Col></Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n      </Modal>\n      <Navbar bg={'light'} expand={'lg'}>\n        <Navbar.Brand>\n          <img\n            alt={'Logo'}\n            width={'44'}\n            style={{ marginRight: '20px '}}\n            src={'logo.png'}\n          />\n          Nk Notes\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls={'basic-navbar-nav'} />\n        <Navbar.Collapse id={'basic-navbar-nav'} className={'justify-content-end'}>\n          { renderPhase() }\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  )\n};\n\nexport default connect(\n  state => ({\n    login: getLogin(state),\n    register: getRegister(state),\n    context: getContext(state),\n    isLoggedIn: getIsLoggedIn(state),\n  }),\n  dispatch => ({\n    dispatchLoginInit: () => dispatch(initLogin()),\n    dispatchUpdateLoginPassword: value => dispatch(updatePasswordLogin(value)),\n    dispatchSubmitLoginPassword: () => dispatch(submitPasswordLogin()),\n    dispatchRegisterInit: () => dispatch(initRegister()),\n    dispatchUpdateRegisterPassword: value => dispatch(updatePasswordRegister(value)),\n    dispatchUpdateRegisterPasswordConfirmation: value => dispatch(updatePasswordConfirmationRegister(value)),\n    dispatchSubmitRegisterPassword: () => dispatch(submitPasswordRegister()),\n  }))(ProfileView);\n","import { createSelector, createSlice } from '@reduxjs/toolkit';\n\nconst filesSlice = createSlice({\n  name: 'files',\n  initialState: {\n    query: '',\n    searchFocus: 0,\n  },\n  reducers: {\n    updateQuery(state, { payload: query }) {\n      return {\n        ...state,\n        query,\n      };\n    },\n\n    focusSearch(state) {\n      return {\n        ...state,\n        searchFocus: state.searchFocus + 1,\n      };\n    },\n  },\n});\n\nexport const getFiles = ({ files }) => files;\nexport const getQuery = createSelector(getFiles, ({ query }) => query);\nexport const getSearchFocus = createSelector(getFiles, ({ searchFocus }) => searchFocus);\n\nexport const { updateQuery, focusSearch } = filesSlice.actions;\nexport default filesSlice.reducer;\n","export const blurOnEscape = evt => {\n  if (evt.code === \"Escape\" && !evt.ctrlKey && !evt.metaKey) {\n    evt.target.blur();\n    return true;\n  }\n\n  return false;\n};\n","import { Button, Col, Container, FormControl, InputGroup, ListGroup, Row, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle, faLock, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { useEffect, useRef, useState } from 'react';\nimport { noteStatus } from './slices/nkSlice';\nimport { connect } from 'react-redux';\nimport { getQuery, getSearchFocus, updateQuery } from './slices/filesSlice';\nimport { blurOnEscape } from './utility';\n\nconst FileBrowser = ({ files = [], activeNote, query, searchFocus, dispatchUpdateQuery, onCreateNote, onNoteSelected, }) => {\n  const [isCreating, setIsCreating] = useState(false);\n  const searchRef = useRef(null);\n  useEffect(() => {\n    if (searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [searchFocus]);\n\n  // generate list items\n  const listItems = [(\n    <ListGroup.Item key={'__new__'}>\n      <Button\n        variant={'outline-success'}\n        onClick={async () => {\n          setIsCreating(true);\n          await onCreateNote();\n          setIsCreating(false);\n        }}\n      >\n        {\n          isCreating\n            ? <Spinner\n                as={'span'}\n                animation={'border'}\n                size={'sm'}\n                role={'status'}\n                aria-hidden={'true'}\n              />\n            : <span>+ New Note</span>\n        }\n      </Button>\n    </ListGroup.Item>\n  )];\n\n  for (let i = 0, len = files.length; i < len; i++) {\n    const { key, name, lastUpdatedAt, status } = files[i];\n    const lastUpdateTime = new Date();\n    lastUpdateTime.setTime(lastUpdatedAt);\n\n    let content;\n    switch (status) {\n      case noteStatus.error: {\n        content = <FontAwesomeIcon icon={faExclamationTriangle}/>;\n        break;\n      }\n      case noteStatus.loading: {\n        content = <Spinner animation={'border'} size={'sm'} as={'span'}/>;\n        break;\n      }\n      case noteStatus.unloaded: {\n        content = <FontAwesomeIcon icon={faLock}/>;\n        break;\n      }\n      default: {\n        content = (\n          <Container>\n            <Row xs={1} md={1} lg={2} xl={2}>\n              <Col>\n                <span>{name}</span>\n              </Col>\n              <Col>\n                <span><small>{lastUpdateTime.toLocaleDateString()}</small></span>\n              </Col>\n            </Row>\n          </Container>\n        );\n\n        break;\n      }\n    }\n\n    listItems.push(\n      <ListGroup.Item\n        action\n        key={i}\n        active={activeNote === key}\n        onClick={() => onNoteSelected(key)}\n      >\n        { content }\n      </ListGroup.Item>\n    );\n  }\n\n  return (\n    <div>\n      <div className={'pb-4'}>\n        <InputGroup>\n          <FormControl\n            ref={searchRef}\n            type={'text'}\n            placeholder={'Search'}\n            size={'lg'}\n            value={query}\n            onChange={evt => dispatchUpdateQuery(evt.target.value)}\n            onKeyDown={blurOnEscape}\n          />\n          <InputGroup.Append>\n            <Button variant={'outline-secondary'} onClick={() => dispatchUpdateQuery('')}>\n              <FontAwesomeIcon icon={faTimesCircle} />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </div>\n\n      <ListGroup>\n        {listItems}\n      </ListGroup>\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    query: getQuery(state),\n    searchFocus: getSearchFocus(state),\n  }),\n  dispatch => ({\n    dispatchUpdateQuery: query => dispatch(updateQuery(query)),\n  }),\n)(FileBrowser);\n","import { useEffect, useRef, useState } from 'react';\nimport { Button, ButtonGroup, ButtonToolbar, Form, Modal, Spinner} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faSave, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Editor } from '@toast-ui/react-editor';\nimport { connect } from 'react-redux';\nimport {\n  getDraft,\n  newDraftUpdatedInternal,\n  updateBody,\n  updateTitle\n} from './slices/draftSlice';\nimport { getNoteStatuses, noteStatus } from './slices/nkSlice';\nimport { getActiveKey } from './slices/workspaceSlice';\nimport { useHotkeys } from 'react-hotkeys-hook';\nimport { focusSearch } from './slices/filesSlice';\nimport { blurOnEscape } from './utility';\n\n// Logical component for hotkeys.\nconst Hotkey = ({ hotkey: { key, action } }) => {\n  useHotkeys(`command+${key}, ctrl+${key}`, event => {\n    event.preventDefault();\n\n    action();\n  }, {}, [key, action]);\n\n  return null;\n}\n\nconst NoteEditor = ({\n  onSave: _onSave, onDuplicate: _onDuplicate, onNew: _onNew, onDelete: _onDelete,\n  isSaving,\n  draft: { key, drafts, newDraft },\n  dispatchNewDraftInternal, dispatchUpdateTitle, dispatchUpdateBody, dispatchSearchFocus, }) => {\n\n  const { title, body, lastUpdatedAt, } = drafts[key] || {};\n  const onSave = async () => await _onSave({ key, title, body });\n  const onDuplicate = async () => await _onDuplicate(key);\n  const onNew = async () => await _onNew();\n  const onDelete = async () => await _onDelete(key);\n\n  const editorRef = useRef(null);\n  const titleRef = useRef(null);\n  const [showDelete, setShowDelete] = useState(false);\n\n  const map = [\n    { key: 's', action: onSave },\n    { key: 'd', action: onDuplicate },\n    { key: 'n', action: onNew },\n    { key: 'f', action: dispatchSearchFocus },\n    { key: 'e', action: () => editorRef.current.getInstance().focus() },\n    { key: 'h', action: () => titleRef.current.focus() },\n    { key: 'm', action: () => {\n      if (editorRef.current) {\n        if (editorRef.current.getInstance().isMarkdownMode()) {\n          editorRef.current.getInstance().changeMode('wysiwyg');\n        } else {\n          editorRef.current.getInstance().changeMode('markdown');\n        }\n      }\n    }},\n    { key: 'Delete', action: () => setShowDelete(true) },\n    { key: 'Backspace', action: () => setShowDelete(true) },\n  ];\n\n  // from map\n  const hotkeyComponents = map.map((hotkey, i) =>\n    <Hotkey hotkey={hotkey} key={i} />);\n\n  useEffect(() => {\n    if (newDraft) {\n      if (editorRef.current) {\n        editorRef.current.getInstance().setMarkdown(body);\n        editorRef.current.getInstance().focus();\n      }\n\n      dispatchNewDraftInternal();\n    }\n  });\n\n  if (!key) {\n    return null;\n  }\n\n  const lastUpdateTime = new Date();\n  lastUpdateTime.setTime(lastUpdatedAt);\n\n  return (\n    <div>\n      {hotkeyComponents}\n\n      <Modal show={showDelete} onHide={() => setShowDelete(false)}>\n        <Modal.Header>Confirm</Modal.Header>\n        <Modal.Body>\n          <p>{`Are you sure you want to permanently delete '${title}'? There will be no way to recover this note.`}</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant={'secondary'} onClick={() => setShowDelete(false)}>Close</Button>\n          <Button variant={'danger'} onClick={async () => {\n            await onDelete();\n\n            setShowDelete(false);\n          }}>Delete</Button>\n        </Modal.Footer>\n      </Modal>\n\n      <div className={'pb-4'}>\n        <Form.Control\n          ref={titleRef}\n          size={'lg'}\n          type={'text'}\n          placeholder={'Title'}\n          value={title}\n          onChange={evt => dispatchUpdateTitle(evt.target.value)}\n          onKeyDown={blurOnEscape}\n        />\n      </div>\n\n      <div className={'pb-4'}>\n        <ButtonToolbar className={'justify-content-between'}>\n          <ButtonGroup>\n            <Button\n              onClick={onSave}\n            >\n              {\n                isSaving\n                  ? <Spinner\n                    as={'span'}\n                    animation={'border'}\n                    size={'sm'}\n                    role={'status'}\n                    aria-hidden={'true'}\n                  />\n                  : <FontAwesomeIcon icon={faSave} />\n              }\n            </Button>\n            <Button variant={'outline-secondary'} onClick={onDuplicate}>\n              <FontAwesomeIcon icon={faCopy} />\n            </Button>\n          </ButtonGroup>\n          <p className={'mb-0 mt-2'}><small>Last saved {lastUpdateTime.toLocaleString('en-US')}</small></p>\n          <ButtonGroup>\n            <Button\n              variant={'outline-danger'}\n              onClick={() => setShowDelete(true)}\n            ><FontAwesomeIcon icon={faTrash} /></Button>\n          </ButtonGroup>\n        </ButtonToolbar>\n      </div>\n\n      <Editor\n        ref={editorRef}\n        initialValue={body}\n        placeholder='Start writing'\n        previewStyle='vertical'\n        height='600px'\n        initialEditType='wysiwyg'\n        useCommandShortcut={false}\n        usageStatistics={false}\n        onChange={() => {\n          const contents = editorRef.current.getInstance().getMarkdown();\n          if (body === contents) {\n            return;\n          }\n\n          dispatchUpdateBody(contents);\n        }}\n        onKeydown={async (evt) => {\n          const eventKey = evt.data.key;\n\n          if ((evt.data.metaKey && !evt.data.ctrlKey)\n            || (evt.data.ctrlKey && !evt.data.metaKey)) {\n            for (const hotkey of map) {\n              if (hotkey.key === eventKey) {\n                evt.data.preventDefault();\n\n                await hotkey.action();\n              }\n            }\n          } else if (eventKey === 'Escape') {\n            editorRef.current.getInstance().blur();\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default connect(\n  state => ({\n    draft: getDraft(state),\n    isSaving: getNoteStatuses(state)[getActiveKey(state)] === noteStatus.saving,\n  }),\n  dispatch => ({\n    dispatchUpdateTitle: title => dispatch(updateTitle(title)),\n    dispatchUpdateBody: body => dispatch(updateBody(body)),\n    dispatchNewDraftInternal: () => dispatch(newDraftUpdatedInternal()),\n    dispatchSearchFocus: () => dispatch(focusSearch()),\n  }),\n)(NoteEditor);\n","import './App.css';\nimport {\n  Alert,\n  Col,\n  Container,\n  Row\n} from 'react-bootstrap';\nimport { useEffect, useRef } from 'react';\n\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\n\nimport ProfileView from './profile';\nimport FileBrowser from './files';\nimport NoteEditor from './editor';\nimport {\n  getContext,\n  getIsLoggedIn,\n  newNote,\n  getNoteKeys,\n  getNoteValues, loadNote, updateNote, getNoteStatuses, deleteNote\n} from './slices/nkSlice';\nimport { connect } from 'react-redux';\nimport { getActiveKey, updateActiveKey } from './slices/workspaceSlice';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { draftSaved, getDraft, newDraft } from './slices/draftSlice';\nimport { noteFromParametersFactory, noteToValue, valueToNote } from './notes';\nimport Fuse from 'fuse.js';\nimport { getQuery } from './slices/filesSlice';\nimport { getLogin } from './slices/loginSlice';\n\nexport const getSortedKeys = (noteKeys, noteValues) => {\n  const filteredKeys = [...noteKeys];\n  filteredKeys.sort((i, j) => {\n    const a = noteValues[i];\n    const b = noteValues[j];\n\n    if (!a) {\n      return 1;\n    }\n\n    if (!b) {\n      return -1;\n    }\n\n    return b.lastUpdatedAt - a.lastUpdatedAt;\n  });\n\n  return filteredKeys;\n};\n\nfunction App({\n  context, isLoggedIn,\n  activeKey, dispatchUpdateActiveKey,\n  noteKeys, noteValues, noteStatuses,\n  draft, query,\n  dispatchNewNote, dispatchLoadNote, dispatchUpdateNote, dispatchDeleteNote,\n}) {\n  // create a search index\n  const fuseRef = useRef(new Fuse(\n    [],\n    {\n      includeScore: true,\n      ignoreLocation: true,\n      shouldSort: true,\n      keys: ['title', 'body',],\n    }));\n\n  // update index when note statuses change\n  useEffect(() => {\n    const collection = noteKeys.map(key => ({ key, ...(noteValues[key] || {}) }));\n    fuseRef.current.setCollection(collection);\n  }, [noteStatuses, noteKeys, noteValues]);\n\n  // filter and sort keys\n  let filteredKeys;\n  if (query) {\n    const results = fuseRef.current.search(query);\n    filteredKeys = results.map(({ item: { key } }) => key);\n  } else {\n    // sort list of all keys by last update\n    filteredKeys = getSortedKeys(noteKeys, noteValues);\n  }\n\n  // generate file entries from list\n  const files = filteredKeys.map(k => {\n    const status = noteStatuses[k];\n    const { isDirty } = draft.drafts[k] || {};\n    const { lastUpdatedAt } = noteValues[k] || {};\n\n    const n = noteValues[k];\n    if (n) {\n      const { title } = n;\n      return { key: k, name: `${title}${isDirty ? '*' : ''}`, status, lastUpdatedAt };\n    }\n\n    return { key: k, name: k, status, lastUpdatedAt };\n  });\n\n  const onCreateNote = async from => {\n    const res = await dispatchNewNote(from);\n\n    let payload;\n    try {\n      payload = await unwrapResult(res);\n    } catch (error) {\n      return;\n    }\n\n    const { key, note } = payload;\n    dispatchUpdateActiveKey({ key, note });\n  };\n\n  const onSave = async () => {\n    await dispatchUpdateNote({\n      key: activeKey,\n      note: noteFromParametersFactory({\n        title: draft.drafts[activeKey].title,\n        body: draft.drafts[activeKey].body,\n      }),\n    });\n  };\n\n  const onDuplicate = async key => {\n    const source = valueToNote(noteToValue(noteValues[key]));\n    source.title += ' (Copy)';\n\n    return await onCreateNote(source);\n  };\n\n  const onDelete = async () => {\n    await dispatchDeleteNote(activeKey);\n\n    // select next note\n    for (let i = 0, len = filteredKeys.length; i < len; i++) {\n      const k = filteredKeys[i];\n      if (k !== activeKey) {\n        return await dispatchUpdateActiveKey({\n          key: k,\n          note: noteValues[k],\n        });\n      }\n    }\n  };\n\n  const onSelectNote = async key => {\n    let note = noteValues[key];\n    if (!note) {\n      let res = await dispatchLoadNote(key)\n\n      try {\n        res = unwrapResult(res);\n        note = res.note;\n      } catch (error) {\n        // if load note doesn't work, do not update active key\n        return;\n      }\n    }\n\n    dispatchUpdateActiveKey({ key, note });\n  };\n\n  return (\n    <Container className={'h-100 mh-100'}>\n      <ProfileView\n        context={context}\n      />\n\n      {\n        isLoggedIn && (\n          <Row className={'p-2 h-100'}>\n            <Col className={'p-2'} xs={4}>\n              <FileBrowser\n                files={files}\n                activeNote={activeKey}\n                onCreateNote={onCreateNote}\n                onNoteSelected={onSelectNote}\n              />\n            </Col>\n\n            <Col className={'p-2 h-100'}>\n              <NoteEditor onSave={onSave} onDuplicate={onDuplicate} onDelete={onDelete} />\n            </Col>\n          </Row>\n        )\n      }\n\n      {\n        !isLoggedIn && (\n          <Row className={'pt-5'}>\n            <Col>\n              <Alert variant={'dark'}>Register or login to continue.</Alert>\n            </Col>\n          </Row>\n        )\n      }\n\n    </Container>\n  );\n}\n\nexport default connect(\n  state => ({\n    login: getLogin(state),\n    context: getContext(state),\n    isLoggedIn: getIsLoggedIn(state),\n    activeKey: getActiveKey(state),\n    noteKeys: getNoteKeys(state),\n    noteValues: getNoteValues(state),\n    noteStatuses: getNoteStatuses(state),\n    draft: getDraft(state),\n    query: getQuery(state),\n  }),\n  dispatch => ({\n    dispatchNewNote: from => dispatch(newNote({ from })),\n    dispatchLoadNote: key => dispatch(loadNote(key)),\n    dispatchUpdateNote: async ({ key, note }) => {\n      const res = await dispatch(updateNote({ key, note }));\n\n      let value;\n      try {\n        value = await unwrapResult(res);\n      } catch (error) {\n        return res;\n      }\n\n      const { note: updatedNote } = value;\n      dispatch(draftSaved({ note: updatedNote, key }));\n\n      return res;\n    },\n    dispatchDeleteNote: async (key) => {\n      await dispatch(deleteNote(key));\n    },\n    dispatchUpdateActiveKey: ({ key, note }) => {\n      dispatch(updateActiveKey(key));\n      dispatch(newDraft({ key, note }));\n    },\n  }),\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport nkReducer from './slices/nkSlice';\nimport workspaceReducer from './slices/workspaceSlice';\nimport draftReducer from './slices/draftSlice';\nimport filesReducer from './slices/filesSlice';\nimport loginReducer from './slices/loginSlice';\nimport registerReducer from './slices/registerSlice';\n\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { logger } from 'redux-logger/src';\n\nconst store = configureStore({\n  reducer: {\n    nk: nkReducer,\n    workspace: workspaceReducer,\n    draft: draftReducer,\n    files: filesReducer,\n    login: loginReducer,\n    register: registerReducer,\n  },\n  middleware: [thunk, logger],\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}