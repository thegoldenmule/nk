{"version":3,"sources":["nk-js.js","App.js","index.js"],"names":["Base64Binary","_keyStr","decodeArrayBuffer","input","bytes","length","ab","ArrayBuffer","this","decode","removePaddingChars","indexOf","charAt","substring","arrayBuffer","uarray","chr1","chr2","chr3","enc2","enc3","enc4","parseInt","i","j","Uint8Array","replace","uintBufferToBase64String","buffer","btoa","String","fromCharCode","apply","arrayBufferToBase64String","getKeyMaterial","password","crypto","subtle","importKey","TextEncoder","encode","name","deriveKey","keyMaterial","salt","alg","deserializePrivateKey","a","iv","keyBuffer","modulusLength","publicExponent","hash","serializePrivateKey","key","exportKey","payload","serializePublicKey","serializeEncryptionKey","getRandomValues","wrappingKey","wrapKey","wrapped","serialize","context","copy","JSON","parse","stringify","keys","signing","privateKey","console","log","publicKey","encryption","deserialize","data","error","generateSigningPair","generateKey","pair","generateSymmetricKey","exportPublicPEM","exportedPublic","Error","match","join","contextWithKeys","contextWithKeyNames","keyNames","Set","contextWithUserId","userId","contextWithValue","keyName","value","values","isLoggedIn","undefined","register","signingKeys","encryptionKey","headers","Headers","append","fetch","url","method","body","res","json","proveFetch","options","success","sign","saltLength","signature","signatureString","getKeys","encrypt","enc","encodedValue","window","tagLength","cipher","createData","cipherValue","Key","Payload","Sig","updateData","noteToValue","note","ProfileView","onCreateUser","onLogin","Container","Row","Col","Button","onClick","disabled","TextEditor","activeNote","onSave","title","ref","useRef","useState","draftTitle","setDraftTitle","draftBody","setDraftBody","className","icon","faSave","Form","Control","size","type","placeholder","onChange","evt","target","initialValue","previewStyle","height","initialEditType","useCommandShortcut","current","getInstance","getMarkdown","FileBrowser","notes","onCreateNote","onRefreshNotes","onNoteSelected","faPlus","variant","faDownload","ListGroup","map","Item","action","active","App","setContext","activeKey","setActiveKey","style","paddingTop","Navbar","Brand","contextData","localStorage","getItem","newContext","serialized","setItem","xs","c","r","Math","random","toString","updatedNote","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58c8839e.chunk.js","sourcesContent":["var Base64Binary = {\n  _keyStr : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",\n\n  /* will return a  Uint8Array type */\n  decodeArrayBuffer: function(input) {\n    var bytes = (input.length/4) * 3;\n    var ab = new ArrayBuffer(bytes);\n    this.decode(input, ab);\n\n    return ab;\n  },\n\n  removePaddingChars: function(input){\n    var lkey = this._keyStr.indexOf(input.charAt(input.length - 1));\n    if(lkey == 64){\n      return input.substring(0,input.length - 1);\n    }\n    return input;\n  },\n\n  decode: function (input, arrayBuffer) {\n    //get last chars to see if are valid\n    input = this.removePaddingChars(input);\n    input = this.removePaddingChars(input);\n\n    var bytes = parseInt((input.length / 4) * 3, 10);\n\n    var uarray;\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    var j = 0;\n\n    if (arrayBuffer)\n      uarray = new Uint8Array(arrayBuffer);\n    else\n      uarray = new Uint8Array(bytes);\n\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n    for (i=0; i<bytes; i+=3) {\n      //get the 3 octects in 4 ascii chars\n      enc1 = this._keyStr.indexOf(input.charAt(j++));\n      enc2 = this._keyStr.indexOf(input.charAt(j++));\n      enc3 = this._keyStr.indexOf(input.charAt(j++));\n      enc4 = this._keyStr.indexOf(input.charAt(j++));\n\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n\n      uarray[i] = chr1;\n      if (enc3 != 64) uarray[i+1] = chr2;\n      if (enc4 != 64) uarray[i+2] = chr3;\n    }\n\n    return uarray;\n  }\n}\n\nconst uintBufferToBase64String = buffer => btoa(String.fromCharCode.apply(null, buffer));\nconst arrayBufferToBase64String = buffer => uintBufferToBase64String(new Uint8Array(buffer));\nconst base64StringToUintBuffer = str => {\n  const binary = atob(str);\n  const bytes = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n\n  return bytes;\n}\n\nconst getKeyMaterial = password => crypto.subtle.importKey(\n  \"raw\",\n  new TextEncoder().encode(password),\n  { name: 'PBKDF2' },\n  false,\n  [\"deriveBits\", \"deriveKey\"]\n);\n\nconst deriveKey = (keyMaterial, salt, alg) => crypto.subtle.deriveKey(\n  {\n    \"name\": \"PBKDF2\",\n    salt,\n    \"iterations\": 100000,\n    \"hash\": \"SHA-256\"\n  },\n  keyMaterial,\n  { \"name\": alg, \"length\": 256},\n  true,\n  [ \"wrapKey\", \"unwrapKey\" ]\n);\n\nconst deserializePrivateKey = async ({ bytes, salt, iv }, password) => {\n  const keyBuffer = Base64Binary.decodeArrayBuffer(bytes);\n\n  return crypto.subtle.importKey(\n    \"pkcs8\",\n    keyBuffer,\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign', 'verify']);\n};\n\nconst serializePrivateKey = async (key, password) => {\n  // TODO: encrypt\n  const exportKey = await crypto.subtle.exportKey(\"pkcs8\", key);\n\n  const payload = {\n    bytes: arrayBufferToBase64String(exportKey),\n  };\n\n  return payload;\n}\n\nconst serializePublicKey = async (key, password) => {\n  // TODO: encrypt\n  const exportKey = await crypto.subtle.exportKey(\"spki\", key);\n\n  const payload = {\n    bytes: arrayBufferToBase64String(exportKey),\n  };\n\n  return payload;\n};\n\nconst serializeEncryptionKey = async (key, password) => {\n  const keyMaterial = await getKeyMaterial(password);\n  const salt = crypto.getRandomValues(new Uint8Array(16));\n  const wrappingKey = await deriveKey(keyMaterial, salt, 'AES-KW');\n\n  const wrapped = await crypto.subtle.wrapKey(\n    'raw',\n    key,\n    wrappingKey,\n    'AES-KW',\n  );\n\n  return {\n    salt: uintBufferToBase64String(salt),\n    bytes: arrayBufferToBase64String(wrapped),\n  };\n};\n\nconst serialize = async (context, password) => {\n  const copy = JSON.parse(JSON.stringify(context));\n\n  copy.keys.signing = {};\n  try {\n    copy.keys.signing.privateKey = await serializePrivateKey(context.keys.signing.privateKey, password);\n  } catch (error) {\n    console.log('Could not serialize private key.', error);\n  }\n\n  try {\n    copy.keys.signing.publicKey = await serializePublicKey(context.keys.signing.publicKey, password);\n  } catch (error) {\n    console.log('Could not serialize public key.', error);\n  }\n\n  try {\n    copy.keys.encryption = await serializeEncryptionKey(context.keys.encryption, password);\n  } catch (error) {\n    console.log('Could not serialize encryption key.', error)\n  }\n\n  return JSON.stringify(copy);\n};\n\nconst deserialize = async (data, password) => {\n  const context = JSON.parse(data);\n\n  const { signing: { privateKey, publicKey }, encryption } = context.keys;\n  context.keys = {\n    signing: {},\n  };\n\n  try {\n    context.keys.signing.privateKey = await deserializePrivateKey(privateKey, password);\n  } catch (error) {\n    console.error(`Could not create private key: ${error}.`);\n  }\n\n  return context;\n};\n\nconst generateSigningPair = async () => {\n  const pair = await crypto.subtle.generateKey(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([1, 0, 1]),\n      hash: 'SHA-512',\n    },\n    true,\n    ['sign', 'verify'],\n  );\n\n  return pair;\n};\n\nconst generateSymmetricKey = async () => await crypto.subtle.generateKey(\n  {\n    name: 'AES-GCM',\n    length: 256,\n  },\n  true,\n  ['encrypt', 'decrypt']);\n\nconst exportPublicPEM = async (publicKey) => {\n  let exportedPublic;\n  try {\n    exportedPublic = await crypto.subtle.exportKey('spki', publicKey);\n  } catch (error) {\n    throw new Error(`Could not export public key: ${error}.`);\n  }\n\n  const key = arrayBufferToBase64String(exportedPublic)\n    .match(/.{1,64}/g)\n    .join('\\n');\n\n  return `-----BEGIN PUBLIC KEY-----\\n${key}\\n-----END PUBLIC KEY-----`;\n};\n\nconst aesParameters = () => ({\n  name: 'AES-GCM',\n  iv: window.crypto.getRandomValues(new Uint8Array(12)),\n  tagLength: 128,\n});\n\nconst createContext = () => ({\n  url: 'https://nk-server.thegoldenmule.com',\n  userId: undefined,\n  keys: {\n    signing: undefined,\n    encryption: undefined,\n  },\n  keyNames: [],\n  values: {}\n});\n\nconst contextWithConfig = (context, { url }) => ({\n  ...context,\n  url\n});\n\nconst contextWithKeys = (context, signing, encryption) => ({\n  ...context,\n  keys: {\n    signing,\n    encryption,\n  },\n});\n\nconst contextWithKeyNames = (context, keyNames) => ({\n  ...context,\n  keyNames: [...new Set(keyNames)],\n});\n\nconst contextWithUserId = (context, userId) => ({\n  ...context,\n  userId,\n});\n\nconst contextWithValue = (context, keyName, value) => contextWithKeyNames({\n  ...context,\n  values: {\n    ...context.values,\n    [keyName]: value\n  }\n}, [...context.keyNames, keyName]);\n\nconst isLoggedIn = context => context.userId !== undefined;\n\nconst register = async (context) => {\n  // generate signing pair\n  let signingKeys;\n  try {\n    signingKeys = await generateSigningPair();\n  } catch (error) {\n    throw new Error(`Could not generate signing key pair: ${error}.`);\n  }\n\n  // generate symmetric key\n  let encryptionKey;\n  try {\n    encryptionKey = await generateSymmetricKey();\n  } catch (error) {\n    throw new Error(`Could not generate encryption key: ${error}.`);\n  }\n\n  // export\n  const key = await exportPublicPEM(signingKeys.publicKey);\n\n  // create user\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"text/plain\");\n\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/user`,\n      {\n        method: 'post',\n        body: key,\n        headers,\n      });\n    json = await res.json();\n  } catch (e) {\n    throw e;\n  }\n\n  return contextWithKeys(\n    contextWithUserId(context, json.userId),\n    signingKeys,\n    encryptionKey,\n  );\n};\n\nconst proveFetch = async (context, url, options) => {\n  let json;\n  try {\n    const res = await fetch(\n      `${context.url}/proof/${context.userId}`,\n      {\n        method: 'post',\n      }\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  const { success, error, value } = json;\n  if (!success) {\n    throw new Error(`Could not fetch proof: ${error}.`);\n  }\n\n  // sign\n  const signature = await crypto.subtle.sign(\n    {\n      name: 'RSASSA-PKCS1-v1_5',\n      saltLength: 32\n    },\n    context.keys.signing.privateKey,\n    new TextEncoder().encode(value));\n  const signatureString = arrayBufferToBase64String(signature);\n\n  // create headers object\n  if (!options) {\n    options = {};\n  }\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // append proof + signature\n  options.headers['X-Nk-Proof'] = value;\n  options.headers['X-Nk-Proof-Sig'] = signatureString;\n\n  return await fetch(url, options);\n};\n\nconst getKeys = async (context) => {\n  let json;\n  try {\n    const res = await proveFetch(\n      context,\n      `${context.url}/data/${context.userId}`\n    );\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  const { success, error, keys } = json;\n  if (!success) {\n    throw new Error(`Could not get keys: ${error}.`);\n  }\n\n  return contextWithKeyNames(context, keys);\n};\n\nconst encrypt = async (context, value) => {\n  // create Uint8Array from value\n  const enc = new TextEncoder();\n  const encodedValue = enc.encode(value);\n\n  // encrypt with hard symmetric encryption\n  let cipher;\n  try {\n    cipher = await crypto.subtle.encrypt(\n      aesParameters(),\n      context.keys.encryption,\n      encodedValue\n    );\n  } catch (error) {\n    throw new Error(`Could not encrypt value: ${error}.`);\n  }\n\n  // sign ciphertext with signing key\n  let signature;\n  try {\n    signature = await window.crypto.subtle.sign(\n      {\n        name: 'RSASSA-PKCS1-v1_5',\n      },\n      context.keys.signing.privateKey,\n      new Uint8Array(cipher),\n    );\n  } catch (error) {\n    throw new Error(`Could not sign value: ${error}.`);\n  }\n\n  return {\n    value: arrayBufferToBase64String(cipher),\n    signature: arrayBufferToBase64String(signature),\n  }\n}\n\nconst createData = async (context, keyName, value) => {\n  const { value: cipherValue, signature } = await encrypt(context, value);\n\n  // send\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}`,\n      {\n        method: 'post',\n        body: JSON.stringify({\n          Key: keyName,\n          Payload: cipherValue,\n          Sig: signature,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not create data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not create data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nconst updateData = async (context, keyName, value) => {\n  const { value: cipherValue, signature } = await encrypt(context, value);\n\n  // send\n  let json;\n  try {\n    const res = await fetch(`${context.url}/data/${context.userId}/${keyName}`,\n      {\n        method: 'put',\n        body: JSON.stringify({\n          Key: keyName,\n          Payload: cipherValue,\n          Sig: signature,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n      });\n\n    json = await res.json();\n  } catch (error) {\n    throw new Error(`Could not update data: ${error}.`);\n  }\n\n  if (!json.success) {\n    throw new Error('Could not update data: server returned false.');\n  }\n\n  return contextWithValue(context, keyName, value);\n};\n\nexport { createContext, contextWithConfig, isLoggedIn, register, createData, updateData, getKeys, serialize, deserialize };\n","import './App.css';\nimport { Button, ButtonGroup, Col, Container, Form, InputGroup, ListGroup, Navbar, Row } from 'react-bootstrap';\nimport { useRef, useState } from 'react';\nimport { createContext, isLoggedIn, register, createData, getKeys, serialize, deserialize, updateData } from './nk-js';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\n\nimport { Editor } from '@toast-ui/react-editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload, faPlus, faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FileBadgeIcon } from '@primer/octicons-react';\n\n// taken from https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nconst newKey = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n  const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n  return v.toString(16);\n});\n\nconst newNote = () => ({\n  title: '',\n  body: '',\n});\nconst valueToNote = value => JSON.stringify(value);\nconst noteToValue = note => JSON.stringify(note);\n\nconst ProfileView = ({ context, onCreateUser, onLogin }) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {\n            isLoggedIn(context)\n              ? <p>{`Logged in. UserId: '${context.userId}'.`}</p>\n              : <Button onClick={() => onCreateUser()}>Create Account</Button>\n          }\n        </Col>\n        <Col>\n          {\n            !isLoggedIn(context) && (\n              <Button\n                disabled\n                onClick={() => onLogin('111111')}\n              >Login\n              </Button>\n            )\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nconst TextEditor = ({ activeNote, note = {}, onSave }) => {\n  const { title, body } = note;\n\n  const ref = useRef(null);\n  const [draftTitle, setDraftTitle] = useState(title);\n  const [draftBody, setDraftBody] = useState(body);\n\n  if (!activeNote) {\n    return null;\n  }\n\n  return (\n    <Container className={\"p-2\"}>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Button\n            onClick={async () => onSave({ title: draftTitle, body: draftBody })}\n          >\n            <FontAwesomeIcon icon={faSave} />\n          </Button>\n        </Col>\n      </Row>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Form>\n            <Form.Control\n              size=\"lg\"\n              type=\"text\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={evt => setDraftTitle(evt.target.value)}\n            />\n          </Form>\n        </Col>\n      </Row>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Editor\n            ref={ref}\n            initialValue={body}\n            placeholder=\"Start writing\"\n            previewStyle=\"vertical\"\n            height=\"600px\"\n            initialEditType=\"wysiwyg\"\n            useCommandShortcut={true}\n            onChange={() => setDraftBody(ref.current.getInstance().getMarkdown())}\n          />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst FileBrowser = ({\n  notes, activeNote,\n  onCreateNote, onRefreshNotes, onNoteSelected\n}) => {\n  return (\n    <Container className={\"p-2\"}>\n      <Row className={\"p-2\"}>\n        <Button\n          onClick={onCreateNote}\n        ><FontAwesomeIcon icon={faPlus} /></Button>\n        <Button\n          variant='secondary'\n          onClick={onRefreshNotes}\n        ><FontAwesomeIcon icon={faDownload} /></Button>\n      </Row>\n      <Row className={\"p-2\"}>\n        <ListGroup>\n          {\n            notes.map((note, i) => (\n              <ListGroup.Item\n                key={i}\n                action\n                active={note === activeNote}\n                onClick={() => onNoteSelected(note)}\n              >\n                {note}\n              </ListGroup.Item>\n            ))\n          }\n        </ListGroup>\n      </Row>\n    </Container>\n  );\n};\n\nconst loadContext = () => createContext();\n\nfunction App() {\n  const [context, setContext] = useState(loadContext());\n  const [activeKey, setActiveKey] = useState('');\n\n  const { keyNames, values } = context;\n  const note = valueToNote(values[activeKey]);\n\n  return (\n    <div style={{ paddingTop: '20px' }}>\n      <Container>\n        <Row className=\"p-2\">\n          <Navbar>\n            <Navbar.Brand>Nk-js Example</Navbar.Brand>\n          </Navbar>\n        </Row>\n        <Row className=\"p-2\">\n          <ProfileView\n            context={context}\n            onLogin={async password => {\n              const contextData = localStorage.getItem('_context');\n              const newContext = deserialize(contextData, password);\n              setContext(newContext);\n            }}\n            onCreateUser={async () => {\n              const newContext = await register(context);\n              setContext(newContext);\n\n              // TODO: ask for passphrase\n              const serialized = await serialize(newContext, '111111');\n\n              // save!\n              localStorage.setItem('_context', serialized);\n            }}\n          />\n        </Row>\n        {\n          isLoggedIn(context) && (\n            <Row className=\"p-2\">\n              <Col xs={3} className=\"p-2\">\n                <FileBrowser\n                  notes={keyNames}\n                  activeNote={activeKey}\n                  onCreateNote={async () => {\n                    const key = newKey();\n                    const newContext = await createData(context, key, noteToValue(newNote()));\n\n                    setContext(newContext);\n                    setActiveKey(key);\n                  }}\n                  onRefreshNotes={async() => {\n                    const newContext = await getKeys(context);\n                    setContext(newContext);\n                  }}\n                  onNoteSelected={note => setActiveKey(note)}\n                />\n              </Col>\n              <Col className=\"p-2\">\n                <TextEditor\n                  activeNote={activeKey}\n                  note={note}\n                  onSave={async updatedNote => {\n                    const newContext = await updateData(context, activeKey, noteToValue(updatedNote))\n                    setContext(newContext);\n                  }}\n                />\n              </Col>\n            </Row>\n          )\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}