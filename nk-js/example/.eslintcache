[{"/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/index.js":"1","/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/App.js":"2","/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/nk-js.js":"3"},{"size":267,"mtime":1611357833773,"results":"4","hashOfConfig":"5"},{"size":6311,"mtime":1611357833773,"results":"6","hashOfConfig":"5"},{"size":11594,"mtime":1611626175795,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"19v1xkq",{"filePath":"11","messages":"12","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/index.js",[],["16","17"],"/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/App.js",["18","19","20","21","22","23"],"import './App.css';\nimport { Button, ButtonGroup, Col, Container, Form, InputGroup, ListGroup, Navbar, Row } from 'react-bootstrap';\nimport { useRef, useState } from 'react';\nimport { createContext, isLoggedIn, register, createData, getKeys, serialize, deserialize, updateData } from './nk-js';\nimport 'codemirror/lib/codemirror.css';\nimport '@toast-ui/editor/dist/toastui-editor.css';\n\nimport { Editor } from '@toast-ui/react-editor';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload, faPlus, faSave } from '@fortawesome/free-solid-svg-icons';\nimport { FileBadgeIcon } from '@primer/octicons-react';\n\n// taken from https://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid\nconst newKey = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n  const r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n  return v.toString(16);\n});\n\nconst newNote = () => ({\n  title: '',\n  body: '',\n});\nconst valueToNote = value => JSON.stringify(value);\nconst noteToValue = note => JSON.stringify(note);\n\nconst ProfileView = ({ context, onCreateUser, onLogin }) => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          {\n            isLoggedIn(context)\n              ? <p>{`Logged in. UserId: '${context.userId}'.`}</p>\n              : <Button onClick={() => onCreateUser()}>Create Account</Button>\n          }\n        </Col>\n        <Col>\n          {\n            !isLoggedIn(context) && (\n              <Button\n                disabled\n                onClick={() => onLogin('111111')}\n              >Login\n              </Button>\n            )\n          }\n        </Col>\n      </Row>\n    </Container>\n  )\n};\n\nconst TextEditor = ({ activeNote, note = {}, onSave }) => {\n  const { title, body } = note;\n\n  const ref = useRef(null);\n  const [draftTitle, setDraftTitle] = useState(title);\n  const [draftBody, setDraftBody] = useState(body);\n\n  if (!activeNote) {\n    return null;\n  }\n\n  return (\n    <Container className={\"p-2\"}>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Button\n            onClick={async () => onSave({ title: draftTitle, body: draftBody })}\n          >\n            <FontAwesomeIcon icon={faSave} />\n          </Button>\n        </Col>\n      </Row>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Form>\n            <Form.Control\n              size=\"lg\"\n              type=\"text\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={evt => setDraftTitle(evt.target.value)}\n            />\n          </Form>\n        </Col>\n      </Row>\n      <Row className={\"p-2\"}>\n        <Col>\n          <Editor\n            ref={ref}\n            initialValue={body}\n            placeholder=\"Start writing\"\n            previewStyle=\"vertical\"\n            height=\"600px\"\n            initialEditType=\"wysiwyg\"\n            useCommandShortcut={true}\n            onChange={() => setDraftBody(ref.current.getInstance().getMarkdown())}\n          />\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst FileBrowser = ({\n  notes, activeNote,\n  onCreateNote, onRefreshNotes, onNoteSelected\n}) => {\n  return (\n    <Container className={\"p-2\"}>\n      <Row className={\"p-2\"}>\n        <Button\n          onClick={onCreateNote}\n        ><FontAwesomeIcon icon={faPlus} /></Button>\n        <Button\n          variant='secondary'\n          onClick={onRefreshNotes}\n        ><FontAwesomeIcon icon={faDownload} /></Button>\n      </Row>\n      <Row className={\"p-2\"}>\n        <ListGroup>\n          {\n            notes.map((note, i) => (\n              <ListGroup.Item\n                key={i}\n                action\n                active={note === activeNote}\n                onClick={() => onNoteSelected(note)}\n              >\n                {note}\n              </ListGroup.Item>\n            ))\n          }\n        </ListGroup>\n      </Row>\n    </Container>\n  );\n};\n\nconst loadContext = () => createContext();\n\nfunction App() {\n  const [context, setContext] = useState(loadContext());\n  const [activeKey, setActiveKey] = useState('');\n\n  const { keyNames, values } = context;\n  const note = valueToNote(values[activeKey]);\n\n  return (\n    <div style={{ paddingTop: '20px' }}>\n      <Container>\n        <Row className=\"p-2\">\n          <Navbar>\n            <Navbar.Brand>Nk-js Example</Navbar.Brand>\n          </Navbar>\n        </Row>\n        <Row className=\"p-2\">\n          <ProfileView\n            context={context}\n            onLogin={async password => {\n              const contextData = localStorage.getItem('_context');\n              const newContext = deserialize(contextData, password);\n              setContext(newContext);\n            }}\n            onCreateUser={async () => {\n              const newContext = await register(context);\n              setContext(newContext);\n\n              // TODO: ask for passphrase\n              const serialized = await serialize(newContext, '111111');\n\n              // save!\n              localStorage.setItem('_context', serialized);\n            }}\n          />\n        </Row>\n        {\n          isLoggedIn(context) && (\n            <Row className=\"p-2\">\n              <Col xs={3} className=\"p-2\">\n                <FileBrowser\n                  notes={keyNames}\n                  activeNote={activeKey}\n                  onCreateNote={async () => {\n                    const key = newKey();\n                    const newContext = await createData(context, key, noteToValue(newNote()));\n\n                    setContext(newContext);\n                    setActiveKey(key);\n                  }}\n                  onRefreshNotes={async() => {\n                    const newContext = await getKeys(context);\n                    setContext(newContext);\n                  }}\n                  onNoteSelected={note => setActiveKey(note)}\n                />\n              </Col>\n              <Col className=\"p-2\">\n                <TextEditor\n                  activeNote={activeKey}\n                  note={note}\n                  onSave={async updatedNote => {\n                    const newContext = await updateData(context, activeKey, noteToValue(updatedNote))\n                    setContext(newContext);\n                  }}\n                />\n              </Col>\n            </Row>\n          )\n        }\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/benjaminjordan/Projects/thegoldenmule/nk/nk-js/example/src/nk-js.js",["24","25","26","27","28","29","30","31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":18,"nodeType":"39","messageId":"40","endLine":2,"endColumn":29},{"ruleId":"37","severity":1,"message":"41","line":2,"column":53,"nodeType":"39","messageId":"40","endLine":2,"endColumn":63},{"ruleId":"37","severity":1,"message":"42","line":11,"column":10,"nodeType":"39","messageId":"40","endLine":11,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":15,"column":43,"nodeType":"45","messageId":"46","endLine":15,"endColumn":45},{"ruleId":"47","severity":1,"message":"48","line":15,"column":59,"nodeType":"45","messageId":"49","endLine":15,"endColumn":60},{"ruleId":"47","severity":1,"message":"48","line":15,"column":65,"nodeType":"45","messageId":"49","endLine":15,"endColumn":66},{"ruleId":"43","severity":1,"message":"44","line":15,"column":13,"nodeType":"45","messageId":"46","endLine":15,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":39,"column":39,"nodeType":"52","messageId":"53","endLine":39,"endColumn":40,"suggestions":"54"},{"ruleId":"50","severity":1,"message":"55","line":39,"column":41,"nodeType":"52","messageId":"53","endLine":39,"endColumn":42,"suggestions":"56"},{"ruleId":"50","severity":1,"message":"57","line":39,"column":43,"nodeType":"52","messageId":"53","endLine":39,"endColumn":44,"suggestions":"58"},{"ruleId":"43","severity":1,"message":"59","line":53,"column":16,"nodeType":"45","messageId":"46","endLine":53,"endColumn":18},{"ruleId":"43","severity":1,"message":"59","line":54,"column":16,"nodeType":"45","messageId":"46","endLine":54,"endColumn":18},{"ruleId":"37","severity":1,"message":"60","line":63,"column":7,"nodeType":"39","messageId":"40","endLine":63,"endColumn":31},{"ruleId":"37","severity":1,"message":"61","line":178,"column":34,"nodeType":"39","messageId":"40","endLine":178,"endColumn":43},{"ruleId":"37","severity":1,"message":"62","line":178,"column":47,"nodeType":"39","messageId":"40","endLine":178,"endColumn":57},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'ButtonGroup' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'FileBadgeIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&' and '|'.","unexpectedMixedOperator","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["65","66"],"Unnecessary escape character: \\/.",["67","68"],"Unnecessary escape character: \\=.",["69","70"],"Expected '!==' and instead saw '!='.","'base64StringToUintBuffer' is assigned a value but never used.","'publicKey' is assigned a value but never used.","'encryption' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},{"messageId":"71","fix":"77","desc":"73"},{"messageId":"74","fix":"78","desc":"76"},{"messageId":"71","fix":"79","desc":"73"},{"messageId":"74","fix":"80","desc":"76"},"removeEscape",{"range":"81","text":"82"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"83","text":"84"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"85","text":"82"},{"range":"86","text":"84"},{"range":"87","text":"82"},{"range":"88","text":"84"},[997,998],"",[997,997],"\\",[999,1000],[999,999],[1001,1002],[1001,1001]]